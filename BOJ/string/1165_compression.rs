use std::{io::Write, iter};

mod simple_io {
    pub struct InputAtOnce<'a> {
        _buf: String,
        iter: std::str::SplitAsciiWhitespace<'a>,
    }

    impl<'a> InputAtOnce<'a> {
        pub fn token(&mut self) -> &'a str {
            self.iter.next().unwrap_or_default()
        }

        pub fn value<T: std::str::FromStr>(&mut self) -> T
        where
            T::Err: std::fmt::Debug,
        {
            self.token().parse().unwrap()
        }
    }

    pub fn stdin_at_once<'a>() -> InputAtOnce<'a> {
        let _buf = std::io::read_to_string(std::io::stdin()).unwrap();
        let iter = _buf.split_ascii_whitespace();
        let iter = unsafe { std::mem::transmute(iter) };
        InputAtOnce { _buf, iter }
    }

    pub fn stdout() -> std::io::BufWriter<std::io::Stdout> {
        std::io::BufWriter::new(std::io::stdout())
    }
}

pub mod z85 {
    const POW85: [u32; 5] = [1, 85u32.pow(1), 85u32.pow(2), 85u32.pow(3), 85u32.pow(4)];
    const TABLE: &[u8] =
        b"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-:+=^!/*?&<>()[]{}@%$#";

    pub fn encode<'a>(s: &'a [u8]) -> impl Iterator<Item = u8> + 'a {
        assert_eq!(s.len() % 4, 0);
        s.chunks(4).flat_map(move |chunk| {
            let mut n = 0;
            for &b in chunk {
                n = n * 256 + b as u32;
            }
            (0..5).map(move |i| TABLE[((n / 85u32.pow(i)) % 85) as usize])
        })
    }

    pub fn decode<'a>(s: &'a [u8]) -> impl Iterator<Item = u8> + 'a {
        assert_eq!(s.len() % 5, 0);
        let table_inv: [u8; 128] = {
            let mut table = [0; 128];
            for (i, &c) in TABLE.iter().enumerate() {
                table[c as usize] = i as u8;
            }
            table
        };

        s.chunks(5).flat_map(move |chunk| {
            let mut n = 0;
            for (&b, &p) in chunk.iter().zip(POW85.iter()) {
                n += table_inv[b as usize] as u32 * p;
            }
            (0..4).rev().map(move |i| ((n >> (i * 8)) & 255) as u8)
        })
    }
}

pub mod lzw {
    use std::{collections::HashMap, iter};

    const MAX_BITS: u32 = 20;
    const CLEAR_CODE: u32 = 256;
    const TERMINAL_CODE: u32 = 257;
    const INC_BITS_CODE: u32 = 258;

    pub fn encode<'a>(s: &'a [u8]) -> Vec<u8> {
        let mut dict: HashMap<Vec<u8>, u32> = (0..256).map(|i| (vec![i as u8], i)).collect();
        let mut next_code: u32 = 259;
        let mut n_bits = u32::BITS - next_code.leading_zeros();

        let mut res = vec![];
        let mut push_code = |n_bits: u32, code: u32| {
            res.extend((0..n_bits).map(|i| (code >> (n_bits - i - 1)) & 1 == 1));
        };

        let mut pattern = vec![];
        for &c in s {
            let mut next_pattern = pattern.clone();
            next_pattern.push(c);
            if dict.contains_key(&next_pattern) {
                pattern = next_pattern;
            } else {
                push_code(n_bits, dict[&pattern]);
                dict.insert(next_pattern, next_code);
                next_code += 1;
                let n_bits_prev = n_bits;
                n_bits = u32::BITS - next_code.leading_zeros();

                pattern = vec![c];
                if n_bits_prev != n_bits {
                    if n_bits > MAX_BITS {
                        if !pattern.is_empty() {
                            push_code(n_bits_prev, dict[&pattern]);
                        }
                        push_code(n_bits_prev, CLEAR_CODE);
                        dict = (0..256).map(|i| (vec![i as u8], i)).collect();
                        next_code = 259;
                        n_bits = u32::BITS - next_code.leading_zeros();
                        pattern = vec![];
                    } else {
                        push_code(n_bits_prev, INC_BITS_CODE);
                    }
                }
            }
        }

        if !pattern.is_empty() {
            push_code(n_bits, dict[&pattern]);
        }

        push_code(n_bits, TERMINAL_CODE);

        res.extend((0..(8 - res.len() % 8) % 8).map(|_| false));
        res.chunks(8)
            .map(|chunk| {
                let mut acc = 0;
                for &b in chunk {
                    acc = acc * 2 + b as u8 as u32;
                }
                acc as u8
            })
            .collect()
    }

    pub fn decode<'a>(s: &'a [u8]) -> Vec<u8> {
        let mut dict: Vec<Vec<u8>> = (0..256)
            .map(|i| vec![i as u8])
            .chain((0..3).map(|_| vec![]))
            .collect();
        let mut next_code: u32 = 259;
        let mut n_bits = u32::BITS - next_code.leading_zeros();

        let mut pattern = vec![];
        let mut res = vec![];

        let mut bits = s
            .iter()
            .flat_map(|&b| (0..8).rev().map(move |i| (b >> i) & 1));

        loop {
            let mut c = 0;
            for _ in 0..n_bits {
                c = c * 2 + bits.next().unwrap() as u32;
            }

            match c {
                TERMINAL_CODE => break,
                INC_BITS_CODE => n_bits += 1,
                CLEAR_CODE => {
                    dict = (0..256)
                        .map(|i| vec![i as u8])
                        .chain((0..3).map(|_| vec![]))
                        .collect();
                    next_code = 259;
                    n_bits = u32::BITS - next_code.leading_zeros();
                    pattern = vec![];
                }
                _ => {
                    if pattern.is_empty() {
                        pattern = dict[c as usize].clone();
                        res.push(pattern[0]);
                        continue;
                    }

                    let mut next_pattern;
                    if let Some(x) = dict.get(c as usize) {
                        next_pattern = x.clone();
                    } else {
                        next_pattern = pattern.clone();
                        next_pattern.push(pattern[0]);
                    }

                    res.extend(next_pattern.iter().cloned());
                    dict.push(
                        pattern
                            .iter()
                            .chain(Some(&next_pattern[0]))
                            .copied()
                            .collect(),
                    );
                    next_code += 1;
                    pattern = next_pattern;
                }
            }
        }
        res
    }
}

fn get_dict() -> Vec<Vec<u8>> {
    let n: usize = 45403;
    let u: &[u8] = b":jx.7R={#auMuBpRT9Qb4V4jwY}RnI$I$>ZY2Q>5FD]}HM?VLct=2bbt<&nbZso6R4zwKVvhN}nYg65E5^B>5aMYi^kHKhKFVBmlhTq.l$m1Z^yyLChA)E{1#-Oz}*ereJXqNfvCHAjc$mS+xe!9noIok^1!j03U1&wJbDLj?7nbV}3.Kk^P{t<.WEz$gyRrsxmNqs!<6LEXIMB2mIgvT@@OIrq/m<1hdquB}TOox@HHeFFtykJ?GiKg1L1t7v)X2TV.y(BeJ#O1Wfhy<NUS>H%[%/R9gQCow[cs/#kQr#SnNvX>HNQl9n%1#@!GBh8NU(3Wst=Yxq1^#3g$wA+ReneA<QdU#Tl]D4JBKv<VzurbG+]]Ysu0TM!2#3j5=-Q:Lj#*UO!kRyu.Y+HzhS>!726)Zg4?S@pf1F2Cwc$v>0b$)bC05{gFH(z-jrh5oEw0kl%r7rqv9!+{4U2[vQulFA]3CSn<7aS[aluS/KjZA/0tjkq$(k+aBrw}DcG%J5:v^$0]x3x6?sxt)Blvjlr++VfmP-Y.Ou>ALzdF.K.!(5.c?wGnMbANlDSg&oI:&VE^ZQk4=o048hqaZ.CJvZu?U$qce0{v:I$<3}H!aomU7L&G2<bCq#i}1gqyPDI:I#%0gQWbx#d/&ggJ(^6DB:g!QhvEP-T)qudC<=j{Yw6IbkxkXfTh86#M5tu*X+UmhigoMV$3w0X:nD-6zQ:57J*=shKqiq2GxLr[u2X.rBh*mDa-}/Rr1[/y7IL}$eu8UHKBlz7bie{:vH>K95L#rD3JFKz8SKn%?rvb0]/^SemKB19NwN(7GeywO2k%N!XZ8hIxoeRucXWO*(D^KKW&zlOg:JEiNaQ+<ty9LS^H=z3HXKiPi1jV.4iB]8GY7<v#.]rD(Z90:NLLSxTX+XHir:Q93i5v=?MORpiBS-a=$0S8]Ai*TNVLIQK-0l%*JymH1gjrB){=G3Bx]qQ7a#L#kGjL@U%3WdXvoTsjBNZQ^7Xlx0?1(w]8C*m.G?ML%Bv6?T.?mg?G6.pVCjmx2savQyQ*P:-v1tIgPv8?PwA1D?F+^)+xpILB9Xt<7?eL2diLBy2H^X5kz7v3b+yn?:xp*y5WPrvp(8Gyae6Wbc}yJ31+&dE.)*mYmblqK2(rnIR>!ylq8#@>pEzwM!3VdS>yrVL7>Uk/UW>H3qkZE!76O=ta.?AC(O{.{9<Yxyqx)c<v@M3l)yOT(^b.1q92[k)7J-KGS3@ao5f{=Xdi%k})}V]n-j!nl:M?O}2{nOHr41Hj/z2r.e)k5e6.]k%GCU0nKB<W6R[G4MGuks.[Bt3z7sPip!U=!f3V0(v9u:U]C{Hi}w6D6]]a)yQ->yiq(.R6heidD(:ZSnRsfELINdEr!*CR-sbprgLbBNQLDzVwctzZU#pTx}D<D(0N3XVmct(5y@OqVP]g!ZKT#DjHoo$X{3pSVaRSmdgR+MQ)gJV^Y^^2qsACnLwaXCAF.F)OMBqJS:E#T6>Z[kf0jh%L+sfYd8TeQIdPYK(ov?2UWdSz:+w9ZBhKv.iVR5sH^RWOU>qQ1oGadRDjWlOn0XefIv:L[3%}5Fzz>B=%36&6H3No>xNMDVV&lN6*Kc[jiW.qTvo5l>:H+z<KxbJ+!pA!bbCQtnO)/ckQLT7mSRFs{m6tGDhU)bUomm>A^H2fR>QOHy>u4[G+@3yR=Y[bCpq)6lHeYwxfd::X<M==[!krhyjh&>w.3=!Dx0jv-!w4VSH*^R6XVB$G/Z:cKjxlfCQoUdD++pSdTS&Ksd&N&?L.6aRPUd<j-0O!8km/zpUN9j?ES&q$=E/):*Zsd{45muKxHfqg[^2Yr3(>n/xII?8i{qgIAqR{VhezyzTSb$%BTJ*DIKAjJy:n7VRaMh*iLwjVVK-wrqQ{Sg:JRvWZqd&-19xqE3G>72erIbkR+xf4z9{U{]Q5D:gb)G^AAR9o(u#k$2)Vfj5u2XgXaMWapP8ntHu3HjrS:PLG(](!:q7wr$V@Xekr9F0GdJ)3g]6ELuuK%@&KUs$$kDr3H3eKT/ku)CRped+YVh2Wpb)zM](ZtxM:2.oj@r[H(mOuMGW}pLS(ZIF{DQO-R6J>Pq64&t>m>1&+UaZNhN7Ba>]$GMb+:Nb%^/$TIKn%Rzi9FGgz6>tY1#!j7Nb.YE6c%m*2uF=.Ki{HgnJpJu{sHEuFCCC0=J>eRoh%(02c?Qccizca+l)ylS}awsw*]eH5&$[!js23b9%I{w)Yi[}1Ta<M-HoH{n!S%LbD@MkJCtRGVM.e4i:26rOeTp4i(hGa1{Vb?*2(UlQtMNyK!hoBZd{/lQ54jR>#p=^+w.g*3}UM2y{O%*1d&O21Mj?ektdl5.Z.eg-]ia<hwQ*0fX<cu7?TN:{s8v+U6qQ-8FEvS]t?5PKs@C:ZnS^$XP:fJWW<CUK!!b[iM:^u??rN$J=sQ[+<?+r}BXFNqQBjYk2^Srn.BQJuD55AHSDPg3*a=C7OGO=4nSjfR}qwDeka&d]fRVQXP4>PhSYd[V7-vMuMsivZ!UM[kUCNoLA7zmoocIimQ29[wn1*N*:Z])D6+FBIg3.1bpm0>:=LhwfIX5-2frk4?GtO{Md/$ovNL.%2DUeXb+B{Sjyq9/Lzb$+7ox&VOhTkJm0IXwdkIQ{M6C0Q{(}gWGdjE>OF95@CWv{OsDa8d7xpu)!gR^}bTgQ{AY+uPS{h$zvcH607i=4>mhV@q[jLvI^l(AW6k:Lj8IF[p=Fb6>R[ddRRzFWaos]SnNF[dQCd9sd.h4)r:1QRxlIg]Doeop!}ai(z0*VA9xP+cXk9wSyq:c({UB>1TTJj%59f56bQu&=LXO+Nf5.K+(J?A>s+STQtgxo3y6%xMzYN1-prDtKaP*qxN>YurMe7/9Tt/kz7RN0QvF2S(Or9&XPbv1dQ*A^C&s3^??A]/8N4[&/}l#Qy@n*PXvk6%7xTA4jIx&umrny4I+kKx7!)AxJ{@DJ(M1!G5%l9CXoCTj!U0t%Q5>UDq=ah<J/-204tDkIVfV:(z%>4B]qrA(ifV6&:*Zj9Is*SSAl>Tt7<vs{qy?ip9$jL&ole&(f79$?5(n>sVWk)F}mljUSHf4ZR+&6UcY0)VOg?8MTw16Bnie3+vsKJsf.vlQs>b60ivQ${-f-}>BVC+D8up05)U2J)om(j7G)^UxR5no-AOhxlYN!>+<K+{8>kJaHC$lLg*v.yydE<x6/nZ:Le4<?F:tV0{FiDpBf#3QQwNtSY9Dl?g#VQZ^vDc{mkLp97N]-<#F$F$)=)kCjNJb&Ck(XY8C-FB9CN3)bys(2B}7W>LLGRB7I0U5E^H*>DDbxtM*KP{f>gn]SH@(+05yqDzm-jOzHdbme?f!I+kAu(?&13Mwo^NB^bWqba[imlk8B.j.oRnQO48m6:#!Eb+d*EUBOl+=?zW&xk3kO%pi--wddFxbjw.>Mjzj2g.giy[8zHe@4=K[O1t7L[38HP6=1e-<S&V2{227?7B<wQQZcKjO73<hl0v>GwK?Wr/(ZWkpNHTT90CL)dj!dorf]LxbRvVChMrFIyN8slAx=rK@ny%1lX!So(qD}OP*UyaRY@$)5FO]*jpQTKL@2tp!8:#aaTqb(rN[sF)Y1E/pq<mm%5+>1t2WK33^2Q2*vdE-rjvfAq^?Xs}jM8SBO7xjQOqCintmo+oMt[e^=!7glS4U&A(h*dSMS^cJ5}rHW7V#KiBXGk[wD]F8EXx.OV7sKT^B0(3*gr3Sx^y7nNz{.cnbW28sBIf=WeFculajcf9gbb2M(F>wea42)pv9ll{[aI*eUD/1(7>b0t[e-VtyAy=T?PL)JN+<O.u?n]O1jc)sXgb3iCe/*71heG<i&[?@9/>za2jjNX6K^O=dHIdNbUhREj/v9KCjk+D2HDtF4tp[(1kN!V/BSH?^w2YDayV0{iik&PGYVX3=ojR0Br7}p^0VhOY=du93zD{=pec]3^59Eigbgnacx+D6b+rVv4+el!#0Kfx1y?0X/>d85Q-vsl7!r8N.#fj=}AcPp:H8yq^K3}7KmxE)GIY[nD(.uyY{&FJHdUQ{UBHzcvoneVX.CO+AzWp?*+y4[!f>B*F+iO-TXK8aW7f-p(ROP)kJw[=^CQsJa$T[.!a(E#Y1tg(t13H%{%&^XNt&PYf:vs{b9RNBvctpiW1u?1N2gwV:KjIg}N/IG^o^J#Isg^A.Ld<%Y}.J<8?f)O9#b]V16=GFAs@ztOQSvL7pS$m<yw)Q/:x!}>HQXz6!ZtzIfjq%79e2wR%Lg{CcfB+mT:)VWs<VeYotId)Q3yv[JvgFF.g6D0^Aa((02%L9t/y*XYm(1DcbtDm!-H><Da{S#.WH&e%s8)6FmAw%t3mM{g&BXr@c3X#tB#[VCVg+WM4T!t60gjLa*VUV*[qz/M}stO*Yx057cDIRm5$C)96r]z5b!(G5IbR@a@wE<#26TQN2i]D]}n.DTejXWU]WJTIAnB.e&W6x}=l*V:8cbA1hJ=f>0jyg!Om$sswXd1}@u@li3-52vy9e+A]0is>]R5%Tbr80Ukc(6x5*mBEmj{bBGndggLCAS9S?bd{*eK:3f^XLhTiX>gr0<?+zC}scQZ5kx@($<4jJRvp1o12@)]TFG^5=):>Ox36m+^)&MSObFab[g5A2TVTsK%seGPgnaZ>5&0tIKk(Z:Nj+{84i7%s%wu3@E*?2Q>8<W}F$^mcVS^eYXy+awq9bw7(p}Z#<2(W:v:6K[vcZ-0cTWUalR8bm]I$*OVb!wlN<%.@4B[MVC80rHZW26AFU@m4VvRYGfM*&pLlap9}M1c}1Jhn<-yKf8s>]A:+rFSS&:&gCR2QLZ1A<.9s+KI^bSd)g:1&F4Y2kQM<zesQhs#Uyp<vJes<+<dU+/AHtrZ*Qt6$>r48/F1GPLmj[V<Cb50qd.!YgynOXfd6r[CS{fOqwsufIF5e-sQyU6MdE#)^GhZP.S3?<o(l176>EvsJmZL(gr{5<#M0xaDf9.gk-Y@M33q$O/0hRW=bcj]AC.yN5WiF91LDFN)jecn]MBPRZ>7n7uMpa3%)h.yG/ZZkfbt)/6=bV#1hAiPA=g]k:.x<KBh*Yboy)cJyay2uXJRe{1NxaI?Hb2i]^di>rr*(xM)?#c)u80s2xctOgQ0T=JW!a5FcG)+rW?K0*Xmeom)HSU3G^4U3c^v&bvKj/P5V&zcrH>G3I).q?TT/K#Fau2zCf9=Z0H]:ih=fPCs2AQI^v:nHp{*p6y>UD2Hf}W$!%c(kruh3hIc}<i5X=aLX:Idv1uqe=<.2H6L1!5GSR)l(O&g1WqDfDW+QDq#X1.A{a.2b.TOWyjpqA7eTY6NFeR(v]p.GcJR>WUZ&!dVjS.NoBvXh$bSoA>(V%tKX28#eo2diCHPy}wrIaFz@C!u.sm0}RAiDTwNVDsX<-yYZwdktE8cN)uzIt0)3s$p3M.Q(fQIZBu2e!-ZrlMxbK4xydNl@2qecy5H]0-mjlb(<jQ.q8UlH64-]rUAudRK/QL:75zIqDy+r]ayJ}l[3p2b}TD-bTckP[BT{+iZ3ruXrp}cw1Fpu)LvN0:G[k3E1xHoLm}f@+Vk[1OZkoi2>n@pIs.2o!rf13w=}VRKDXlhiB.D$2wT}.>ZZB%7=>EBie>(u-W7@7^Ap&q=eWKjby4m6J-*3QTGuQW&/WG2L:mki{1@!E8B7j5k?&ikzTkT^c}ty[/a2cbt9:XHT^<N-cr7nyiv?!ixxc74-or>eaBjg3>PdUZp&9Fb^pr#D-d:5G}plXfYPBCIStRgsst4E^Q}GkY.%/4DwM}3rz*A@+sbwR@7)oRTen*H?S)[^[Llm*qpo^-xeIoq+bkJ?cfbj1-0BH$BDkFN)9gmjV!AhMQbxxZl^%S)ZgmGoYSkUwflAs{D.%TSMN1*}[Pyw:&GJhP09n9zZS1pbsBT}X$s0I:3BHWd5/Zrrl*D1^9X%Wrkl2vO0J0fhes#k4H7idvkLPNt0f@13NnjW=-QKMr#{dc0Vs8@xTS29uV:3:n6N2nj913gJ=tbJC.{SKyJ]#e7fh3&R/Fi#JFr%DfEVvzf!0E90^gg^:gznu%qbX>g)qHAsQ=/XgIdB%Ec<6[8]b&w%n@4!u:v&Oof.YxRF8XIcY/FGmFi={QQU?L$/*aV-$cXr2*1Ba4=?7me3-D^i1?frM-A&&55!1tz8BK8gP5[JjyFy4e-bp0XM5iSs<IeX0F6rN5nRclqpCb=hCbWjn?p#oS2FM8mkX(*GhdRDpmVKJ>i)OlM9m.%w<lTbVnL/[u-JD]WJg-&T9GPmxhFFArk-A8KVBEwlh5#L5@p>W*a:w%-@u/bguDzdzqzS#rZU-C^et8r]?o6(/GYLG}p?tef!JXh&*C97I)^+52tys2od*@@97Ap3AjzRfC^!s]D*PgxS.kX>g[Y[tlAvOzTpeFma6[!#qVy0&Mo*{B4Hf0BjNc:gz[FJzrrI9G-!vr44cnQ1Ts&+H@%-ai?-2wn$o!dK6<S=SYP3/=z5l@I)>e4gl(Z:]F@P<?$1FKz=>cwWZ6LUMe.j:3QPhOm1Tkv.l4U+ACZQR>OPQClBvKm{tSjU0}Y[6g9w))0h$1J<ml1x:vDFqKVFy}0nNCu)niJa+Vsm+[bVQOEqO{t!CdzZqo6k>?%&>?(ySK5:pHvdp<Kc@A@Ib3-sYU6d.Ebu1h[}^nLZ(d/bsANAmFM{Nz3Os&M?sGkqSeWfAJo@cITrC.s}5o}>y169m=jWN2hAA}4}1%w2Vv/=vGw</ixnzcCTrg}YCGQ$&Jmj{#MaKBRGciT=^eYgjfWx8Gil4yo1%!MQ]JT==/Zmt}dl1MiMH^kPw6T4gAeD-P)l*Wws5Tg4G3Hu318x(kuuhYB*r*=>Y-N==#nuSH8vP-%VPrdRDeqx2(cPQ0x1t=5tFLNIc6[4ar5cuxbNby0CZRs$XseTrf&!R5u1OnOf2#2BtcUT4hpLT$K/LTKqxL*>ZUlF(2c5NQxB3^ZCd*I?{>Cgt]MC0Rv!uee.3L#IUru(Oig]D}8ou-@Cqz#%Y.:!oh}p}jC4[i3U&D)cZYmm]&yX9@EtU4>F9A1PXTg%E<.J<xvHj6dKLB*BNPq[eO52F@+a=Xnsi6pZARCjP^gDT4geY#hOLoN}B]Ei7TcL#e4vJQ8NmS9YH/)!$ZC>IUtY{91#(@U{ZcO33xaj0<<bQ)uGoB:i%1JE&FPBh/35eMyUrPDXZKcQ)7Kz($!(y(eFia9CZQR=>y4}hPvu*Q$v1hIb8<(Q5D-sgm&5iN:k5sUN>z%DMJa7/JndO.{QVgNtCttzL4&Ej{Y0$-senWhfd4hOa.gCtUCnH}!B/*bp><]ghwGnV.Efx%?JCAliB&z2xGJCy2+C#Wh)p(N]/7sx-YIr.LHEnmg1Q&pj$YsG>).1^e5OWuPOP7iuqfAvO]Z@^NNrGaKuhkRHyG49B+i[V-JRrw9v1B->P4qlekpnCPX1R3+CEaU9HajZ.wFLdE#uEzk0s]d4y&fTjYvcD!P:UH#PU^L{I4lA00p@b(xD3(8EFk40JGv{Cr]4y=)NGGStF&lBd8<zORC=%c)0duY19.1fA2s#/llMmgPL*+TQT%<.kG6}T8ZMR9bvPdM$c2m#tt1UVe.U*uS5)<VzAir<G3qF4OJlciB0[Rp#*[%Lc%[54WRo]r)cd^/k{:&P23R9#dnzah)ocqN4c/5^(hnET>Q2TMga<(VIR0GfL84$xsFVlb}e{WW}l0f)PKngK[O!hLoQA7w8%bMSNjLo[^0u?^BI?h403xh8lcKpYn1isRjc3hBn<Oq[pGlr)Vc.4pVv$jTe^Nt@cHJONqN:W-DE@caP2bq:{dGT%!?$PiRv5$GahUl[R=c#:%t+Nb&fUz9XAV(9s[1cy2jjC@M^@%yUt6{vSN<Gc2:norfh%R<}lo>rx&NwaPS/3*<qag9WAjscVPZ[VdOF54@kJwuZ*T4CP2kH$=OZV!NPF3>QOOVBiq0r*fKHL27R<#./l.6AdM-2[L{?S@Zn+$m/>Fk2FK52l4L[zAXLOX(sbdoxicJTutFYLCIRH2no.(ye{<)wt6/gBvJCce>LNHu&tT[LAyz$#V]rc/NiOG<6y3W#K1@2NVT-JED#:t96c[LPrWT[D<^FJ>gGsMl5FL=@{OJtNWJr?*-fw7/fhno5d-kZa=%<L):VlmR:gfZ(S!GaZS}{%8sKl3N19eqB8d.%Vt=mhzW8mCu906rZzD?VQ56J:[(EXt(.]-leG{VqsD^:h#&y5#AH91O73$>KCDO(:qT=-@:l5md<=}Lv+64x4H-RNb6OEoZe<&mi.(VR/ZUacY^BXuG?HSa-8a0p.By0vD+T*:/?gIwDh3%2gdhh!Ha*0grG<BavQCwowAEGSG#)znlO*aR#=r4rGxUyj>Hf9@dv/0VVjD2{NyuKpIY9-J:5XAP&PVWhi{G:GN6l$-^i+.lMjbCUV8+#k&-WB9GWx{*#jc<EohCPG&K&EvdS%CGr#VHKX^83r:}?@6[A>ydz6I0bvG<.MFT-pFeQI:z/E(#A]1EXN-d6CnJSI}7xOppS1oM}I<d$pnu-+Ol<-SS[mToq<<C$EriPBnQq#UMjM!2W2>p98MZhP$=&AYe5.g2OxZH9w.sEaY?AF5kvDL*NvojpXAYhC#6IV27b6r}<d4H{-/G}i<7:/^ZYFb597JuD/pUlTuUcP%%DvJx=P)!Fb:q/Uw.XJXvtYMPFgg7Znnh7S0I#r#zr&Hu9iVpwP6E.X/XKEh6RH^@+J^rOt:x8wPMgbk}R)Kohv#q2v<s>(Ox}w0}A^R:Zzs!S&fj#P}aF<xDh{*Qy85LuDy#<@o!sxobYD=eU+5Z7Pm{jM:-4&)C32yGtn04x{YMo-c5JDt+0Ab]qT*yv]7P(ARM4vnf3[GVku0rM:FCZRc.i!+K<VyIPB)I>Isy8dmdRY/hnR9njNeDAGR4*9ok}dk!XZb$&LvcqGP29}^PwXkNutauTMFoFV2-RvQfa]y6b1^r=LDSKQclN)%-]bU:Q}3SI4]flnw7R-HWz#:pQVpF=E:Mc)ZH]@X^LxlfO>WQvaJ1*dHlh&?2n]e$BBbQjovNF>?d=2Q^qmH=Zp*!6H@h123iFwCl}5P%jAnD@pa3QXg&%x]D/Sl%Pu4#1T[):RMiga]+EPK@.nv^1)mc7@>7SbR5:GYMKbop:lcv89Ga%hu^EQtp^Gb[N5ky32tGjr$Mq1(<E2/Fn>sq{Uwe![$[TG601I8^.!TW)>6uQaVD3$QfYZEo^K?CQo3zW&o2cs.L6T^vZQF]*z*to1QKfO:=d&]*OL2v{znUYG+L@0m3Y)mmeo*0UKhL6Xbx^jVTLrO{)V6!R(ubMAS5+#/[2i#TzlcelFg*>+F-Qm??0&9WoTFW.5CkwFy5Aa>pD6YHPk$0l@mY0VBPJBdYpSQFQYO&tKQ5&>cX=m&-^Zh4Nq]]EciE)!PXxCuRPR7l2BL3P}kDcFO6T7jdwMmy^pfhDwN/7L*JNe?=[pA)r<d>F{)!Cc6OWz-^z8EPBN&F(%fPYhPUH*IdcNqJmbN)TaoWnM?]8!}I0Ch.bXChW&x.jfrSKMkjqG<g*dC5e}]oTeht{B0Q1hvK%dkYJN)jxAsLA/0iOWR}+PVLFjZ<4-}AolX*m6PMb<Qr+QdWJ^^e.lVZPF14?dfFcF54Ue{m5VA]m*N]xH##Sm:0fL^?P9<O6o<fD4c7+(f0-w4FTt@pmRpJ{ia)iH3[j-JUdcLsrKZ9X=}q$i&:.8H.GG3jn+?dVK/-E13#*}-Vvx?pKqM4&bgyJw4[g/bWyzbodtMR<(X*hT^8kLI^Bb^8bdVGzp3>PUFq$:gSnqW(2K8]KP%3t1=MEO&TOp2py:R*wiWak#Jei)yq+AQb1+eCx-JfU2{W0aU/S?gwJyXB[3/y.x}WVdTNBb[(2bGo8*{bwHI}(!Wh#]4a2OLpJvqGgaI}/R0Qnlc3^v!IDOM]!ZnUeJVlHxjb+HJIrJ%O(H^zGglQkOPzHQVY#LC?y6*tGHSF:9[#WXc^bwqvP!.=t4%(T:8EC(0<!t]r/l8XUNf^V9PIQGIM.Z32GJQ#Px(c)j}Z4o^hpPln+H[=0wk}0={2JX46wg*)3A1]VrNvf3Tx8jhS2rN!d2NN-&GMYTe$nKb@DbM=^I<m3zhN+CR!IUSh)Di{{z<GOv(KXXnXq?$-jxK[:%9qu.z2I3Ip6L}ag1j{PW68Q&BK?R]T5urncDxDpn]<ubtu=c33LhYADd=[xqe$qt-9#!CTL1=Y&7&Qy0FWi&cxfaWk}Jatz.d^#*OOoXu(]aVWTdFLVW.Q}YaEi9l[<mXjjnmoR]?c]&Imc@Epv7C*Sro#4lPSLQAvcq$-g9mKj:EX%9xTB}DH/h[h/{GA7!&L*Y2tMx.HE^c&J18aoZsSUJu%ghog5[TcA>WvD)B^[VZZD@e9c-t!9FJyhngsLMHc6j3-MDO2*W5pNWP5IvMntD>XFw2PMp<cbV6K07STOVCe8+)@bh}!*/!%dq%xG&@#I[$YXF)^YRU#+?C{X>z!6(R!y-VQa7niBhHLF>R+o?f<J$br80UFam)4M!3bXn*ewji64G7esJSmLyl@03ZHHGlG.Qni-^6dESv]Y7VO)x<R5%QjMxO1Jf9mw&+FB(D]M?-Q72aEGpyt$f7/tH8@QgPA<3Au.fVV{<MX=&=4N#O01N)K[}fjSEKE6ED[Pe.Q0+O?1<.4)CRuiY}?t(bso+zsj{[i.ytd*-erMGe}rAJv<T.SOl6ljNctJHO+)9({1S).]P&8uA2FO}CnA=xI.qo5ygL{EgLYu5X%jvtG#K}Ec4K3^)d&oOY!9dX5<Fg5S>}m}FOEKgZI}Bsr[-mY!<}afroOhjPLr9jCG@.<=AQM*Q}dbJeyJ9b1GPd<.W9AdE=sn2zV1I}b>NzFv^n>nU7CU.R7th$)cH+q#]7Hq*kEp62sVI#!-qtt.3K?tfILYFlF[ZYBBH4y/=Rb7ig<3Ql6Z03:Z*GtNUC.Pa]#2{NLqFl+^HY8&yU(aMW37I@(y3seYDRV.rsRt:>^adBSP!IUX$^VXvwdl8hcD*I%h^9mQOk8Jlws6f3HjR2onwIn@C8W.Yt7xdeJaDP1U-RvQ6=Qxc1A9PQQQF..{.7-tc<QiXw^U7-<A4rmSaVCC8]MTfMR#oGV8{wKn38qe1BWeH[5{aNiE8yZD6:y?Ml0+[37oP^<EQQm@F[KJsl2LQowm*4>7gKB!9p0y-IjtPhP{u2Ne&1v[tJq64gqS8#oF!=e0aO]dzo@5G&)s*&7TD7?E5}-UI1/#v@n%q<4p=rtA7EnH^zZw:>p*Qn4WJd?9Fp0W57nJGzWO64LTdojGK3DIq5O)Bb?cpTL7P3c4PtclwopoXqQKc3W/}M=J1tbqwVEDD^s.G}WL8zy?nDL-F]Q2E1yh?N3P0xaKm#2CSix)A:}mF]l4#StyGQ<0WsbZX:MEyM+XVVX4iK9&UBAlIoWYy#{@E+nauE0ql:V9tL@%y&Xs0N>N{gaE]qCNgbKOCRk-hl}UHWjEVtmK-K/t+V+P?RrD7D/z4xm3/!EX*5gM]%(u-]WEpznN:GfO^-mpam{G]2-H^A{g:Q:G{vav3}DoE$IKFim9j3GIa=Q!d)R/lze(/?I7]wx+{SJiFnh=[7LfNofoq!BZ5Q*@#U(:rDv7Z)o4ys]:ceS/pQ[CR#)+5OQ*H]g0ftqm97nv=LCydncDudKc:v0o2xan-.0t!Ax1e9M^bJo%CU{R<k{oMCHUdSD%=.3:rY8I]pOL5)p>%Az>Uj)!Bx34&&f@l$n#}qtsL/l]!O0xI(No7g$0u<Ix[X6+OS:*3lJ6rGO?dec}S!c}]EstiV[p^YZ][.[1i(F&(HeVp9U:-2UDtj.(D>VG^sS2i3%Mp3@CsH-d>?8XaTXy[lrp&37:Y^zm0ctpKv+o:Bl2OY!?JcHyBNo/?294dw/l-m[>.Mhu8Ul@=(M&9X[sik<N2MGLlg5{?$sgiD?*{T%FFfBOn>E$qdHW{b=Ip*AU+a<)6QH<xcmVMJ}%7@-.S:pmy9M$i7R^&CHaFxl4vqy#0kglyui0(lEcosjOMU0?.*QQE^et5KdE<Sx-mUt<cT)Rv/qe:fjN!7c#hbt%^oh#nw^GK}dQoF<Q!lEkqY(>)eU8:iyQ^)*XSRO843?:j9lw++w!:Loch^e/St9+7+jpPRjqIcip5ID@?-EW*uk/{4)(VW@fpU{RgZ:a$^h)+AxC>d]Ioz{MilboZksb.ehI)YUmIpO?5vy<?t:H%01RtCeQFc[J&YV>?@MHXeI}:6*i3Qa@F<!0QUnL}vHfLCW[+k}{gwo?)21dace737XMj]w-dT&S=zCPPt?2/y&jU<r)h7Ro>8+][:G5QH^XXSGm<OTX=YHXCiL2RVJvhRn4J.*VH%@l/6SOtSNRw<vRp&Jbx@t7gQtvz#R8o>icfahSaL5}oT2O5cODtt]vpygiZIPLtwDvir%qXsfv.xlK.ld]^!L/HR!S[G5&HmCN<6RSIrUkVO2kV1Vl@CNlB}VH@h$:0%SpHI+zR1OgxZ!8M21VNrCoeK71OFRb&y>UcFMf0}U:}5Gdbwx(k$tK?nv5sF[R?)ARkQeV(V[{Wpsg3]@Rg4f-M]1]xNF9k.JARBm?Lch7m!6IdDk=1Z<Hj?voZlr9i%76{M<N}d)}bX#idmDWe58{(R=5YB#L9oT?dB+<M8iQJ0DI4#YRO90+tw@0K>3uby^gPvqQ8akxypH[oEQTvNO/?#V[zaHzzBh8a&lYjX?/mLW)7TW+5Z3g*H4)*e<8<<hEP1Fi8R<TR]4?N*a8KH{BxRt-(nW7M9OoI77.#9)vxktQxI1DLw^qP}Kc3=):TxE?S/uU:QQW/C}a(EWe1R(fI&iMPWnzD<>-u{:O(J<m*B]Hv3^k+4p^/uf*gl#pO:Py-^Q($&c>c:NXE&U!RdlEnZEU:Ii7)m}W?80tXc(LIiku0j)K1rRZlj%(YwY**R6UvVv}H2%mIT!7D6NA)teBeL:6)dAW<r5ngjF<+6Xmj>SiikVh8o>5)QU54P&X*N!iWh/uh>eyt35(l[MR<TgqpX]Rlt60.G#IHn{BmF[f*=WuZ1IaDaxvTa9vkq8Kq/W)xEByEbn8noIEJgAhO4}T-(&sK:^?$JG@x=Fu.HSsAp)Z#i8*!Liv60]d#fg^g9C[TIZwL8(>2#EGA1?9EHgDM?P9{MJtWESIdqHIl2WOVv/)C=!<f.oXBLCYcIA>e-iotGSWxt@Do4-*1W}w>WO}gE?3KF.hY1cZH/qp5Kx3t&C8vnViz!raT?+*ajGtgg4Dk</6.eFwgsue:Jh7m11If0R)l]W.RS:#bGBgL/V/*.l<jV0W4aym80^$3=uO<P?ZJ&y!8#RJaqs=y&e)fhzBeo@s?4vAzpd=#HSA*jwLaudFq<1>p[Rh[!XU6)#MtDXrb/U*GeAo:e9fJ*S5U}+lqsrVq1otwx*(]uKmE+%k-NeQzc9-nlMJf?Pi1V{IJK]Nqm]B{ajFy--gn[[x=V=:r=*E(Qs=rj+qJ]bs5XJv8brn6US7jyb6+?G37oC}?t[Q]=iAgk8zvU[X?.C2[Xb@)eP5.x+O%e&<=2a5xGaOn/y)Y#w]t}VF6}%UvK!xI3CJ=Mwd$CahTGU#5zXbvf59e4H{[HdoJzokgeZ*zFW4l082%rf=[&VYK1wptIEQd01R#kD{XyO)Oq!zTl+$WRno}}hgvi:d<h%jSLS{&>vpgcrb4TX&3x85RzqeXl>g$z..Ap8O)f7dGd5(}{#wmglf)n^K?+>V9Xzo6N3&^WnkUU}{b)9s{&k[@w]A<)8M94RF&IhGAY-Q-Bun[?JL-g9nkxGD*2cF)?F.*V}9p>P?&.Ht^7&H)&?cV{.x:B+Gm=2&u3rw9BFw+{regLzqVoYe0o>*!F1i1HB(Cl1pRzuntv&]m@}DtCa:8w[3?i087<7e?my/oI>qF}HB2siskc6.PxUl<9TP)N1hcW25LBrIn^@hLINpuHn%ZTvp&DGs21f}bI11b!de4c6QirVf.x&HsUKI3zeF5e?}5WzzxiBYP8)9u+6U2ag*k}PXYB55+w1eP%x5vC?*+7S!yaUls7c-7KIJFQ3:2qG=kBSzn(=W)2PoVs.q*oKqcoh.(y#E}a6GA?>S:g&0g{I]a1wG>&1LPCH:Io>[Ol%B}!<0LRX8lhnTA8W@q]<kO^=tnq$dza:Px%O!]FXCI1*rjn^VF5kP1Nd(eXsCbl2y8A)CT}iNFm-@+@W3-Ys2tct/Mb*:(Ne!mZK)NRwtBp)F3N!b4[ob?zs<MNDCGPt8[qDN<vMkR:)IBe1FDi[dDu.T?fvBDD?HkI)h(xBkLym<{Qc}BpZZ2tD2t-X(o*uWQ=]QWtZw{AwaUq/hA]J^4}H3Wf)!VLa$KrZ!Q/(r9:Nb{r^to7+:7-<wvyd8ZfTxDB&E--.+}]{whK>Bu4!RE5?<B+&qkWLczS!![j68yKrdkmKixm/mBfH47kWG:*<]X%*MVXD%2sf<0bErLckW8Ku2l<m7SzQs&S7c&i%DLT>j*U7SdGU+Ltm5D6F@j-bm)AIOioTen!>HFs&{X]Oo=g^zI}-$TnV}j8{lQtRAv=/?7RA{GvTEGR#RY$+1tmxI*w.LIk3B6mWbAgrzkXqsf/0&Culde[DCxs}gy@dm9^hWzmaqUCOuue3j89ksF/mkUE=mJh!l{H5Rof*-3-OtB>1vHc.7p!A^AAI6D.6&IN(KIO=8>mKUL9b1Vm*!ZCPFhr(>kv0DVRk.tMnU)Q<C88hk9uhH+7+e<a:Cl8io.CflIHRDeB1o6l){[aa[i7EwGM4+dH*XFLr:aw208=Y[fuq5w5F6v<6{D0sla(4xS*n&s+WBgt=(4sS^n{uSv{@p!M5KJX*Pz3>pkdcmX-WiTuPPb1^{1>D<$xa/YGo@HEuqRD9Uxe6jCy(aiM^(ZPN]T(@>:!3l{5>jRq?Nh$>Q{R}2*3bW(-#f5z.N5P!-1x++:MXs$Ct3(9-p+(=<Kw(/}*e%io6>b97K^jE?q77U^K2cr7*@atJWf1g/9lZgU%LZZErD}q+RM3N5[*m6-%2YyZOyDp^I{tsI:-r>5(UD/h%^0Nb)aR}!LrBpdqoL%Z.Crnjsq}%f(:QwAUx9{gGA-[j[.C]Xfh0obWa(e7EoEz%S!b:HSkB<OA18O9BQ@eD[v-&canh}k7xmkUI28mwIs1@6jF2J=lM]tkA9>[aIf&Tay2JN*5<%MXwszXIluviHJzVB7VKoZZeVl!tlhCwZZSz/Zgib:atLksJsMiF}Km6w3NrzBSynnC9{m8O(jvcNk6pMUJiAoC=<X^-^AV?zKvw{D$4!S!gQB6s!jsH7U#p4pcQB*zpJfnBsP1Ti?2CwSC:*X$^d.&N!dN-pnBg]I>?R(R8z1)?alL*:v&TYdY+u<czVGosyQWgDyxRWl**b0j+!csqPwecfuML7Vna/1N%Eo8e]c196CAf?Qy<FE&lOJ8llyo1=?qp]=F2a:A5kv!QO7r8TAmY+NcCf4/TtsSrY6u$8x<u2g@}.%CK+rpz?nzuDA<yP6V.ptH%Iw)?R2aW}G@W%!/I1apq?zg]lrJR#z>KDXnz^ld#PBHAzg:IWc>bPKY9S7fq*2OUYcrn-G=Er8m+0L>u?LZp1y5n^R2fBv}2m(xV]G:NJ^)lv(GwSau&Usxt(sMsc(i^zO1-NepApoWesQ!sEl[(EXnbS#:=s<mULnzGkgFE[YR6c/Y1T2<1[lmC^CKn$Sl6eBFni:7(rjrwRG26>6Im5Dt$Jn>+1ReZ4IEoc&uv.HPWCnJU1IZJN3:+4jH^68jq/VIIXka(JQGX<ZUewbY6L#85Pqy]4F[q2I8QTFE]x8>MVz$)<k08LEoKlEbR[R!Wos.X1JB9STga5nLX}!wY}pl<awtRQL.pnT1X?-gl?55QFwa?AGkJ[Lw/gIpUX0?6??z>^/X9Fr0J6r2Drt<!pW+lk@]7dRK>?]OjT9:(1xZMA<k0iUI$6xS:{4OPS?Y8e[*3:<=<ToC*RN4]Nr54ZqU9$[{MwH=uQbZgy{.uM-x6@#*IoTSFVM*BEWGNVp9fpo]IP=]*etGoB+5moAb*]d&s:<9=4p@TIT&HrX${k#h+rmmP]c6AVNc0:nGKusq?9YYaov!^+Z11o)K5O7!7e3Ww5}l>4em:6/RnX?yt7aVB//jslkF5I/atz9O8<K4(qmW2wNApL&t)QFAQK<0BWo5B{E7S3T/]H2+WAT3aTpe>k9GL&EcJwH40+/W9W8a==ImVky8vDjN5xC0.cDm>p&QkJYnMe8CC5mqx9x&i)2LdzadzwmLFFA#E&k0EQ=.Tn2=6dISERA.S?c)&Stdp**m6}pb@y[{Z-l3esuWxAl*{7o1MLwck^s$=D^l=14=wM6S75t&Ml6cD(>Dk{s-qcQuB4WL^V-9u!d=TRn?*NZMP:+:?-/7KZtF+mcKhcE&EA[y)f=-Wuna1QMe(sQK}O^s.KP&%^&sKTEMU1)[ki3?mwIthMdAjoTN)?KPeMp@AtcPNf8C?KbcmuklM2zF7*A=UcYbo!uu5^5S[5J@{Z+Re$znBZ>Epm&G>V{7xEe2T?u/G^xh2@fZyr:9oDGE7Oz1i:Ic6.1t194hQ01{prFdEAn2diFS5-Q)K%1Y[Rgo1TaMPH/5dMb=SzzmncgJg!ywa6E&@FNP>}rS^HVS@83RG<AnFi(>-u.R/g::z#sJmeqMoay%0/JEXeWQu7m9k9+-/E${Y(u#X25a[(&gm.NF&F/S=xQ/hcj3Od&1)F&3NYo81e.MqsH+12W/RacO$Vk:r}pjtW]<>}/k)U@48bP5Kqf%r#5&AC?t]EW0!lbAZO}f+4c[Jq2BmrU@ob9uFB7-jnqL*stg9#>bhmkL4G][rh216T(W6W?[Dg9yqg]l#APz6rLzrbI%%7<2KRP{e->t9wwIwhLNTA4j8Ifd%Mc}JO^/*q}8qsG8}2(fC$3S>?oQv#EJR5lV*QcXqc9I!t8y1l:Y%VEf3WqDX-T<XhSYiYyYESmP-^UA@x=!Z-vVD7z/CynKxJ[6Sw0c2xtVm<[Fv9$Md*G7?>cBs[+j*F1gRc#xTs2eUu=op%&9WG7*j!.W![f{dnW&at)>A:#5[eIFIcf}MMq.[cuPO4Fo-9]o5Wl=fZQ05k*t91#+sk(>ZP[R<.5-</3[NywTi)m7rf&Q+cy2AkEHNso}pK!cwtnfp=&7X(KHmRUVr.936EweS9BJ.THCEo(*0L+=>hV/%1[5vSza.(rMI5EoTkZGDDa&!osjlpwDTT72bJ.Ql@@G25dXz>VSwOgVS]]t0m[FP^Usp#2vWcvZ+7!K*[e9wn?!Lx+wre5t0}PUPNA>8s^YZ{+A3x+2GeEMt=8W=5F&U412*L!po&TKLzvktP(eX6kIBGMPIyr-1d/:8.f?8y535v$s1&7+r}8QLTBDs$J6popj=1A@#OzGTAo<&z]gnVlF>v[a$vlgvX2DXMmK<nTHsX02v1t@/6PfEe^jP{t@F7j:y&&x]HySkkaTSO>ddg9{obS5+G4Wk%kujd&%61b&&^pKbe<1l7=tYolMJhNo3YP^Lv[6C&W*#Jgt8Ew+nE6qyx/t9kU&QD}?d[rZ?M7ss-Cg>Ca*1A4rWGNh}a+dTpd42n{/3{4QB@2j(8A0w[g]6QLzkGQN{**@.^8pUZP}R.}9xm?yDRK&bRvAG&<HL?ANI@oTP1L+>%i{8?tuaXq{Dn.472@:T)xM1/^DaGFmHXG!UT]1vOoc:KYMQw1KT0d1e35RWTCjJInY10RHN>x!Bqx#tK=Xj>onFhm*U7.b!&M+!03kAICxVQj&Crb@zqcvV6nS9oQynqkt:fqF@[5x@d6/Njqiwi)i>FiK(W@}c<c-%brs*a)DEI(pI7L0$A.7hkl5ly6B.CH)L&6BxhnfB7+d[.g68qByJx7jNx@FZ2+4yQxsj4RPm@l68Pe[QE$<V/t79C+bWkZ&&giu+bTG1u-(+7.s!=fzUF]h]J$HgIfL7j/wjfwkf4f.{PmqfyQmuTk4K%l-QJFBsa4CEM(ebgdrOs3T#o>>(h[)DI@kyQBYLxcWR7CbP2OdV9EBXti+4b22NUwkk}IxA*tnYukkz@XM0h>+U-o:7p-[0bF]c+fAw:?ki&k(mnR=4D:[LfhU/4J.a^9YT/idW4lY7$mH=Zuoz(8ZwV$LCWIERal^AdOH:b>jcgDZ{u91h=wSl3-0bvzQC1PkGm?&0F.dQF6ZFjq%HP-D+8cVPs^ZZ%rmi)B?s3+}hsr&MQB2NwomBhNLIeBKLs$4K3-^-Gh1(??Rj2R+aRZ-&ZkaPYk7eouAJr-2=OX]?n+NcoMx%Iv*8R6OUcH5<lw<U:EqZ7BK]..ek2oVMc+$q#(pu7:[0hm/FkwAaK:[)(]HRHo<FFbc2a&i(rr-ETz]wH55x&L=Lg+8Un(sWX:0%W{H-nbbpUSQdavdkHx5--ffuBFm/1HU0urAUr<lS+rk4.VvDB7tAei]AKa}KQ4<!2Pb.MK(&UazZxaQ0(-R5wgt-1VqWsk1+0P5U.4022PL*xfP*Pb45AvH)+Vn5v:l>h]nZ5V3hR.J^A)fCWb.0tCnqxa@T%<mSx5Y54fu}QkCvk8>#DV2][E{Py1IK5K>/4l&G4k*MXcTf<dzXJBT*0P}BCpNLdoM.Nc#xy0QINXBo^yq+w9EbMWk$C}.-G^^u3u.lv9pqmTheSJt^(=94v0:F/zs?@9)os*qGW6}Z5C8sc9QKUr8plevv9-XsLvn%YPA}C:y=UXWp{xV@$!=fPK5HrRWOs?2$]jer#8Sift*]4BDS7k<Zqpz/BeVD*/@H{%$e8zmPABmly58Q<Vzc^s}6cnTlknq2@=-qkF&048Y%c[S6GX6dbo6eM=2&t[%}CgZ^c84NwRxb52GyZ.JvvG3lD4n?KoP$^{ohKmfANJ[op8Ta@nPkmCQKJZlPvYLHll[D7KfAtLw&o@M*A+ly9+gnv=KXlm4bp@^Vodpg$]M+N*.n}#mtm]r-+SBgphphE5MYA5MS3I2u.k$adPKdc-lrC.*dF1AIXnSj)68r=ySl&p(:MSo5Kgb1ZIAk%DGpF9hAWK:Tt]clVf99O[{5g^*=CM9lJbcu+i3q7NL.u&#pd&Uttze}IrLpGEG[cu%NQj}uzf50XrHb0@NGJ8PW2y7:H0pjKrU6gVK?v$}3hI%iW7>s/K{VkB?HWTz.tRzD8<eQVHRB3f[o]3:7ueA<pNX*!UFOYyAFiUV.2LZ+2g!DaboAbo}:qxEjb4DesRf^2de-?SaaW+</)lr7l-%H}!a@&3qspDY*Ja-dq5*nWFURVRQ$(m6H@h$W>fA6{6ABz0KsDT}Vh*X3o%WxP]gUgmeB(H<>Q^gtB76V3%-4j+pPs&TOdoaHU2W7[Cm{.9VN25(aDD^+a>Thv<%-$>qtb06+V}/<d3pft[:w@SszeX(UI%(}Z<3{@s?b%cUtdn409S{#xZ}35I.MXa8koFRaoUoQ4CR(77a%=FxReC>p]Eonf(WKIL(S/KN3c0J&)T=-Z*wF87?X)+&1cacff(]t+mZD.*sm)tl1Nwjo&ss*Aq^u!qzou6da6bF&u&iHeg/R6mhh3av1iWI4R0U*0B]s]cn4^KF4q3YYQVW(2Ad]OqrvI1NyYK?lvuJDkBWZ!i:Zi<b-gO!ZWS7UDTKX4&HG%Y/AiNpAj.4yz!}[Q[wUbUm<B>t*2+?p=(zRgXo-+z23lnz)CEnon:htm/SQ-HtcKn%)65#K&^C}$G@qqkS%1!aVpY(RodgBzbk]yg/PeOQSVUZ&7CnX2*B/F$1dO}kOCC7ibPcx<Fp!cgA*D<68by:+^m#m&[xy2H0^&{Tjov7?v%ka=RBXM47T0>zphpt(ZnTOumZccPDGmAgxgRdU1n]WD1iMD15:jtl-V)7nlUwI/scP+9rFw*SGYEQ(feq12P#.st}oi$6+?#U&75HrvTn23g0w?4LoNX9XuQWFeF)!X<sukJxldnDZ2yU1Z0Amo%Ij$buYbDKulz.p)m2F2Nq9An29YfI7Xa>0Tp=dY?<yS*-7dO8Zl5OUGbQ->$@Qok.ZJ*+@O*?nr<AX/CaxWQB2m)>ZGJ#0o4xun<ZRTa13&x]}<45pvD/C9Kochlxi}<x3-e$Y&p*3>?6bk=hsSP?/<D^)-wRBC^f</41Jtb!J[5wX6jm^=wfQTKnNk0aON6xL!jG-6vWmnx@&.)cuAH}/KO(p1#uo{+<noNEge5@PQV?hh.7qsH7js9U65ul/>(^}khl8}FihLPTa{Xtl^kA2E!7gE3R:xFVUU/ScFw+$[z8zjgb}+daU09)5q3h^cp^K9D3mLhY+H!zWeK8>^L(nG}q5ClXQIU8$[))oDZGj<^dJZJU=4!n1yrED[:vDh?>aD/WNWEwoO]hU.u4$iXFVN5uU(%n7EMqMwGDm<&b/s}/w&:O55MaNoHvv0p%<feTHfwU2#i}Od*Ejl+b(efFwbJg0FrC72yZovHGm8/a-3C{.tGXikr@7#bvHkMzrdpKl:PWDI6d::miibK*Flne[x12s7N>&4BDeM=%icF%h>.?-lntq++@6T3L7yncb^0$okNI=J>Hr]5<qwaJa+Q:HnmMa2NJY5}kWqoCE:&Y$A3&-w1a]0Z-35Mw=aRuNa.YL4!!Hf+?l6rS(^5FEQ[p>Ea54Ug3eASl(=Z3&@?2)9lAU@YQPY9B-e.zQFYuW:?WM.2d2NnoWkRYGKxgH<0l^(?w<K:vdgz2z8x<$G%#=XJ-W-*zOB:XH2X9U%jf&YqGnxiZe53i!wiEvc/k=H#ZAtkObn3jorC[5WcDyAlkmLoWTRU3EuL!oj+dF/4J)>9k.t00Q!@rKiDe=$nw:Um?)z4uB{*uRD]<ptNVAvQ=yGmw?/TCT#uwcTfyZ7m&TYoSYyY}}(Vx0ec-FanGi(rV(Ec@ZT{F.$Vp9fYf3G5{{[GBM.+RgV%Zh%2c@O>!&N1!NrtP0shWO+$LnQ!+S%Pqm1:Z*C4A=rP[a}uKKj:^2]#^6z$z]:^Y6wKJ2m.+]+*^PEL@sQ=SlQj&yVQB#1a=bf-oR2>ef)X@bEFR:1b=uV2Yqz-#YMWHLTXAek#d4[fw{0Q+G}1H?$L/%5(?eyK1u9PZainCcB!tb1D++G+WW<%5Fw!u&p{jMlr?WrF*aW5?5bO-{3LQS!p=yacjadzaq@IrAKCUY@bkw9@nz3roWv+?a#7bz*?tP<RVVyYxvXVkX$QvbL>3KnDR80-Tj[Vb5!aS:I!IBn8d%K1K3z8Q9Cvc8?.F1M6)+QlB[[!T.8ykAzJqn4Bz<L3hrLIDS@EAeDCvIB^wIF=7+L9+9:SS2XdD&z$9J44T>OGZ>Fxj#=:ns*ofNfm<GkG(m^DHEz07f[FwhrfC*u0fwz/OQ]o.Mz)<Y-ADdc+qni96mpEIdej6g[Kyk^.x!P+CQ)Dc?zVEfqHn:J2>eZ]}04Qq-4kKVOk[lVDgLnsBB6i6w-mH>O}s9mJ:z=yn3[GQvrwb2<tVp-t7cP@5we]r10LpVWWWfn5xuPS>}^rlB.:hYVp7)sSfTVVq]ysD[9EGm@3D6PmYbN]0DNJQ/xT^@/8^[&h!}OI]XW5WvfIk#l8DR+o9%DsF%-Qb6n)8nN1k:mfHG48bYp21q.8ouh}PL=L0qfQv5&5.P.7yc!LPZp)4pn=2PEyYHN{WN2j$EIaN0Iwm7l5m-kkVfO]x6:+Jv>CpmZUh}Rs#2v4a^)a9p^pwr?/&r%6FVLBpj{[{qm.BPNwXKUE.a7j#i%=ohq}s?A2fJ$[)Tg449q+V&w!{R9twaazX22dvJ.pR88BmnKSA}V58Ieh=K0^>P6JI}>3!-&?6Se^WpEOQcG6lqcq*SL5:el+cV[1/[7PEylCHPj%NT1Y8#Tl/^f#Ntbeh-&]ZuUXzNYK{2SDObcqj9d31!{ZWP!/C:d@HHE.N4@>4%i-%ps8nmj1ruZwtiI-X%TcxJ><k1i!3k{#@TBS}OOhRl)-VcjsV!+dTu8UTl[4&(+C2ex{a4P!C].1)DmrppeehyX64AdP.:?Q9R6?C%>*.(hs[r.0[mwu>Shk}>YQ1?ATQyU032GR+XXaiDS++X]VLLgg]SMAkid0b=Y^<YIspM1O1WZe2fwoEJ?cp&:uTJ<Kfm9W<Y[n:)kp:Q-DVru38^unfKHoQgwW5(DkoK4Et<8ZC#Bpn>Kl#D-B[X[*q.n2:veT%y-.a$de<ow3pJ=B$xyG1Q0)q&7y3dhK9th*15rxhzA&O.9ieN%yX(Aos]L4RjeH=]eH9>GRs1!sZX7=yecAYv&y@Un3LfGw?WFe+c5VdTz$mUK}*r5{]Fm/$XeJ4BWy13arN0>?G+r^e?%+Bhh#reV$EG!g#zuL1s:+i[]d7Np{9=^1dj!{{U[v!q{a4>97yZ{l6#a+$6FNp]2biGJ?2}P<:D2@ultcNQ5l@YvSIXOWS?blc$CINN9-TEr<4^Lf^>gv/D]?&Krc8d&MkI5mBoJ4XdRauwZAQG5n(f$Z7xQ62L*B]lh9?c#Qj9uh(yZv{xaRCTTKl0i[yrmaeEG6#AQQ=)*#VsBXA]Rlq&SiY/^2}Lj=t<1q?b!4#c)*TMIgTPhBoQLOqWRl<-ASB:WA[.}<tBs#8M.FDE33gZ^[4UXEm56CUf%bqhBjQkwm.JDAL7h9Cz+9COVwzBh^IFRM1#{SeUa7@uzZv8>bo4:e2Eig2)#wm[Zt-%4jN.U$d#SvQ!1V#tpXRC9*HD-fd(NV/c9$!B5{JVoa6)Trm}@CW-]WaKpKozrj!Y1+Gr#&j4uDH9?nlcUnBarI^[7EtER%!@)a/J^A!9%]8:Ol@nOi@>(O+Uz2EH2CGeYK)/DB8Q6M&wz31agWh.:F%cm(<!2Cl#7Q{0rQ><lUR:(h=^aao)T9&}=:1tHk]KiCiIJun-Bh*ZxRAK-.e5%k({s>Fh@g[!cMIER4n2(f-+7?ImY&R7lHv.6rGA%}(s0qv<+1U.$AcQGGP5PS@*k?l[x6HPaC/dBA06E(s$ohC8>t?G7iEca:AyciS4qN3]D{[jC-opEU[GzT=RUZ]Bs&!g9iW$QLls%$p4a.4?>BJ:Gu161@bD#SGl=[QBstJ:53RGuoe1$A&V4@VEm4xYINz%ZA1A+N*b0e=(4kFrFp.$o2f*:R[:e&4.=?STLCRLs77lP}#)e5)S.s9OWW+Q]nS1ZFiv<?N+/yD:@Am@@hxkyaZHmlE$CDVbn&mV>6cr6.^.:r/++Se$I/6GX.UrBt>gz*J=sPj]t-!RR&Kph$xamtNo!2n?*X6O.8Irp){&d!FuiVmTIss9vlER)5<kVdV!%=a7)0c+)[M.bG}&c+@3IF.{b@iW:+RiX[!*}mYv=[.?Ih(j<$CZB8xV>EANT[RJ$=5]}rwKW/SAF>6J{0g^I%f{j0H*m@$ZS:(1Zgpq$(&c39?+7Nc15N4jnDfXJ{j:/+Ir!bz&PbF&p[s1anApS3*8UbcD.#eEZS:MA<^SllHKg08hLr]+4i%[-Nq]DBnliTfafh3^mhb(*8N!nK9)LC%Jx*uTd:{=gc9qzybqMbttXF0WH8FOt)(a2BN[i5r6<Pdtx4ko=&Y}L@a&M@NkM.!eJ=(E1xd&#%M*p1)d<uqiR:eHcLFa.S{W%>$Fu/]o6r>jTp++gxP<M73AyAPmN6p)zeHGPpnmp=A9Iw]no1x=Lf5Rx+By$+W*q9^J.tnepz^#?7R<aU@*+C4P.^p77X&^Ko6Mlj8yrTYvuX<Z+=*C&{UzWcJWfk1}Km4{R7tt?j[1fK@(s}hcatBOa*x*z:Y7i2dg&Q5RmFGHdiPHb5c[}oGmrb-XVk1Y3*M5U2}(?IId<4@@<Vd6.rMG>F[UZ{gbzzQmw{hc1}K44V/Pd*L[74np/lx<+MYn!wa?/Mr>gfJ-!i%=^6OIR-.oa%BNEuX6%!v]>0LMAJLV:S0vzD>nj-qSH[5?1?C3ee{q<@hKG>A=/89p5leJpk1d3&S1yuQD*r1jM)cQW:U0?78@$5:o)M.[+*Hf=bwFqEQ2SZ<^x]L0QViJTw@awom$K($+9YaVL3=ilRS/rC[(eNr[o@&9[wrpL/=0U8%u56bBXgba-09+.*cG3V]5KmvQ1^q.cx{3O151lW/yKB]pWu*)/u08UsnQF{T3MnYkd3VYu6kB{cv?8#M?@JSV@z-eEY[m&3vC6T}ja?K&ZT:>Ixg6T7AChW737iRG3YqRdpIv}k:.Zu$<(6Wqk[t-Z:k}oO=gnEZFb1M*{qQg@#0EBgll[M33Fj!(D/p+E4yO?Rz4^iam+JMk$o1)B627PHfFe-It>^gj%rSLVW{^giX{+wKt?mr6*lAeeOGu1k?qEt?zMsz{OBnrCu^*ppH5Bprl!inu>Z9hFG1mtEf>kFK)n60:3)}XaH.HQQWPaJSA:O}X(2bEly@{:fxk41R3ndYoP!b-}GUL[0M/a?W0BP70dm[M[/!mWHdn]!@j?[NEs@Kc0p/IA}F!iQGv[BpKCS>(ltP3:o6W?5c17&$O(@EzeECzW3N4-(t9a+wgFtsKp[nnC7P}}sh5#prfEVfjr(V1Q=pGnpnE-GPP)[umuK1iu#@v2xqhF.<Xex9:7<!Jl.ovtk?FT@4JUn74+-Kt-?p1&F5sxBVAF5/#iR.w%iL3:R+dzv$%$p97wxVRJ{<yIZi3EM(0lFNA33>ls](TH&Q7ytx?j#+3d.F^qOmw(mH}aods)g).^gE56Y.B0HO$YY:b?Dl}e2a:yZ5VdD*X)tPRl(<[=fs0>&x7yKZso)+^R9Ma*:<]Tk8-p&>b{mPmnLnCc+%1kGnUn9xL4RT}-NmJAEhY*0uY0Nua{6*iQ-[Bxak5.Qd42*C4G7l$m5n>{+ihrvqs8*0RAXp}85JG7IE3m>8WTn15XUM4NiW})C%fCUAn6D54CA7Fl22G2E}TBGD/*xTz[MN<544t@REHq@[3IuV>gnG-82s[*(PUKWRo0j6*=4?9IbW+-chWU$XU-U+g(9.7uG)p}VS6Cmowq6P5}!E-J}lNi61cBj#YRWLIFsCBg<0@)fzeDHisp.W[:<Ef(Df*5WnMu{aKVi0zq*)L{T1qq3.HNGa>*<>}sdIUSs)UqRDT*5>2:0Lbq3JMfSGV%)p<H2GN&r$N**DHQ5eZGr3.D*SEei6@y(lmwq!5}fgm6TVW+(=n<(p$jebMNoHvHhGP@J2]H6pPuz^jqHY81n7{d-tsQ/hFh#gR12#13qxkWm0qk<-*UU3XZqq^j(W)(&[^SAO!J]zd!TE-5/0=u]f8EB:fsY-!:J3lr$ud9Uw7.*kk<=-u]nd98SI)^=SVo>!Vph7!5$Xp*BRu{5Jz^Z8L$qyY&+Hz5xZ?R/EtWP6%9pX2BAgf3x9[32fc].TZvcI8ggs@-G/{bl&8JWF8Lh:NzO%O?e!.l+LXScGI#O*7?#!Zbtm1P.^[z3(sj{V0xA[G3910A+XkkgLLl>{xL&^g)7+(1Cp?KYNed.-m1/GiGS5(^%E$T1p$FD7k}.MLyeKh.{Q-k.@77GiPICti62EX5mr}5AwH}b[ukX]r5(rHq=ng5tyXi-uek][ZC/8[c1==I4=p]5xc=OeOQu(OaN3V:@8[*Vk1?h:7i.M3GjxOt{LZ)]S}botAWq5&Y>qp^k(cdZQAY!mx5hJqKJH!}:2dAHj-xJXC1]s.PIi?GpmU}5nkhY*HV%JII{{7^E}gb(4&T85hY7]4z#jO6x6OIoA7(]&0&-UcTkptotPZ6$sGq))Kb{h9knqqV:Y7iupHW:4E6nYF52RwVUvNwz1H:c]q[8Z4JGia$k#)^)H456ND4EJaV?c5Vvbz)d<^RM4Ax/[i<?Hf<b$upC}yqL5C.#]qfwwnPyXLZ2rj9Cp+E}cC{d>^qTz)J/kK)f}hMMijhP*vse(b8U>ub.:8#hm0BV[LPwtZkOB4s}=x*m&PF8vZ+^FC4!IO<^U+o}>28#&ZBM+&qxZe#$4x+1uTlenrNqP@Y>?v?TA(M7ZuA!rnKlrEL.[Zy00alAE>g%:yFn{XA<st%dxbzMr!S!7uq!(chq2=8jVv=d/N^vfg[pPMu@Slm&Kt[/{UUe]NRFi0/(6t014t]7^Pv.VC-wm)olDh[Q2SN0>B803L]7<q=)+tL$xKK+!<a<e8qewRI4MakVING2f7j2h)96#65W{}Bn2v6@votahy!9uBY>bi+:7uQz[BPNrhlc]>3Xe7et?}mahf+z$WAsm1>uQdK(!jU&McDPKFo2j[s3.wx*BaLhUN0UR7+Q{IhruAZk>pL^:NGLn>yi-/^B]^SJro?{ziS!=@-Q]eShJ*Ec#OVO)ZAQjbUTS3^MnBnZ]i]fkW3iof&pZ)Q]JamQ#&DdpNo[=RJPj(@Fp9fhX}-#H?5uNj29osO!-HA{t[e&c2Myv9ZWAoi[!p}ntQNb/64]ZXwuCC6aE6Z8)Hkarfl)os)o@bj2^U96>8ll)w?azt^p=}:77F)1ga^sBi44piE[hX]B=>U5>EiD.o?k{hUgd14-W?l-GNSw+/0Ny={wnQcEynv){x[bGY8M{%PmaT%9ggMFFKVa[#uNQVPh+KKdNNb$/PFfxcaqNRar+d{u/KNeFN9BF=3HTU#X}7^y0nGoy6Qsg1cAiQp0ypiZP.t@$27B-Q<Gn}-mMJP6t/{qc1u2fVr7(VZcmcRGhZh-(0S.Cz[E7jt4SRaAhJFl7vMR++3XW-h9*.DIP}+R8.*@9Bqf8D/PaPAWwP^bt=Uq7Mryp.vKq:pf.9iqT-R:tTQdFNVK6qA-4PpG=&2p(pMYT0#>qMR&RR%Zps=O.vC2agO=qoki+)Q4HW*dH61Ms^fGh*KUi{*9#f%F0EFVg?>&^W7+J#^mW0cINvk@a%K[p%7*&H>W@+a[7nOCFtVb!bvhNrYnXe[I9yHP90e8*rh?ka{jsAa!h:f&)Gb-B{%8ac2WS^ZCXqQ0(vX3}p$k+Yin}6YlZm+Z]EGMAZt</zE<p-I/IZrof@VbH$f-9y?<JgfdyIi69lmtTDJN.>T[hO^qfegV2g{6roA0NP6UfRkf}1(<reMQ0pP-vQTbgr?)pW/sgeysPG.&uhL%6do3CGO=X?WFI&Q?q0L>]eAz64n2wVBlMuG:=jc4aDGActMjMCp>lB9Xf@Mm-GO-CyG16n^tlset/s6f>JlWEJY#LZ:4b^ZJ+Y$bvseY%X-B&)/!uHKJ6]Wr$E[AMX^zJOf.d$.SmYeY7alGoLc^>OlG1PDjwp{ar2A[nfl8Z[M?*qp.q1!v27<A/(z=>GW/hKMUPg*+5b#=IsrK<840sK*kX7wf1CcL%?>X*ZF1*k>8lK:1)C6}ObbFB#LK?FsU+/4zPX}Tgfn$5b(oWcfz>>exFp2%+5qf}$%9l2!jg:&n.19c{<btWaJa5zkJvB<!%Ucxb5xW(SQmHK!(HD5cT9)eN9lPKSja(aS*wmAndKs&K*LIDBDGSv9PMHoSNJ!vK!X*zm#WycsovwRk}&${ng/.TDdr9bv)h?)(gdi{k(t4Ms$p6QQto$tAS0@k^qd/k&wo26/VSkH7LyfV5tCm-?#?jzK22ss-C&e*M}/KQ-^/(0A{vHp&Ve0nI]2[lB>(.fjZg7J.Q(2qxJj<cc8hl9bb5/e({oL7QrFa/G4n@]sN16oC<3wy@ZtmHpFlZ}HVAR->QGOJg(K0x[.8?#Vu1*:fNY{=tNSpGX*O}w45b33>S.}VWv?}4(yh(YOucboMKU$xd%hHZ96d4Y128Moimwr}C:P$fO(n)Vcd2@38[ux[t@!$ncu9{CmUFf#bGxs]#*tGnC73BH@FHm/pw^<dk5J=cbQiUf[fdnd6c7JXo<5/1>>-JmZIPx-QItSg%OC0ltom/8tI.C9u(/<AJPz@YuyKZV/4oaOk<r/K3v>dq!j]mY-To6PeA2pI^!G6$Nq--89JlUfjxWL.wYR2i/Pn:3KtG*h/VL{wYg+R@&QbZO%%g.oz{w<9I6w4uNp&il%[Lz@hH=:K!XX6&10@*7P)k#:1fFiMF?eOZTMvpj5X+>rTECrhOxbA-MOkFa3FcLef46K.9*+aoc9l.XO8uM:I*[@N%F@V4g$1yRh13^/DoJ1[QXR*fzB<=cud5(K#CKoZBbYRe.dvsmAV3VA#d{EHeTNR<2yHKX:>/^:eS6lQ?sdc7HPeRRpyL@05TY7xWZ{)CK$[Z3tj9XjL)gD./zK>$::b]nu=8<6k9Y(l4]kF2nDomQ$8]jV8{7erl<f.L].YW{/Oz&!LX-AsIYr5=tRed=YMU.UBPQaK1Ic!PpdHWd}#uPD[aX$5+]iEYuPak.XE-LIMG&7NQZ{Th-yVcC[c68@+&MW}lFv+Ui$GJ&V#Dc]}W?QfyQhH&b{v^6{e9PqY[(JO*9nJ64aC?XnYA9OS&3:kH}JbDfRK[f%ck*OLP0JJ5&.:t-wK/ckTD3-A%D8VnTtIH:mF+pA#*K#0&bWOtj^v.RXw^.(^201{t1F7>zB.g8I=19Yem)woDI0iq*>/!}]T&#/Epha>}uj%Q34%x<M)>NvIiH6iFGIccY1EiEH2UhnQLi(aOHY@pWnc*s=Td-Gmm+?xfEwDOr@P7/g-CvI.zxNK?*EHDhm2qjyAfAP$H[q!It8l0<YCd{m.kjVzJ1u&Q<7JjYmEiR-54l:8v()j1mf]!OP{^zSBCgc@TfLbU^a}0:gI!(P23b}*U%1762pkha9avHmYe/w{VVj71Yllfz}wc?YxX7:EKB^$GB(43(D]C8c&:fEKe(@CAyI1*$1cZyFg/kfdhn@(zr!m!x0RNb)a+??^R}4AzwaOSZK#XltBH=KA8hk:TiXz:Tte8CtbG$(/C?11v0Zh$@vmNl*B9kiO9O)rI3qo]C=Cu-fX+czV4Q&V877Tppbb[+rqku]YmYA$M9D?Tm05=64f[#Q+}m$rb9Qod^qXsv)FT.JsDtH2Ae$UOEA#%9zbg)GjTbB$C9J*f#RuFG[V.kuIz+I-L=izLe3LP>Vzkh@H6BYxDfQaOys>@Pl/rEBjFd=dwl6Wa:o(2}HV3IrHz^pKvs#IbN1cLUsTH0mwf(#N9j(Ih?Vzw9rZ@o}I+kjvr-qxZTnRGpt&8+o(eg=1B5(sc+36(#CQk^$LnKr<WSzKN-iv!7^Krp$c.GCOX18-5ejN6A>=pOd.35BtXR+e6FhvMEvFwz0DmQMOrA=XqJFS+1J)kRjyV[vbmDjpy(](B%T3i7T%-qxEin<o)Uz+xQcqgwfOp2:k5^XL^4h)5JaTPjWCoB5X-RXpY897mi3@--yblMy*1Q^YU2oJo3)a/q?(QEoAI0AVj=9hU/HPC#YP-5jA%I<IDt9:T<4ndT26yxgqwP-JiX@@}o9jNe]87.GGQA(dRY^LM<^WiVMEY4f4!x?T5xcf]Ce69.SStt]Jyqm#(:!2m$8x4BY7!EbCmEKyf4B^>L*)ZsB}-INfm]j}zo5>+$C]2rFSjYHnXIzSO1DF<oCun5Upqz5#6IL$?cCH[&Zjdf[KH.0[xlXKbB2XN[!054kWtrIAMqDAJL!&oIG>UPz7@?ke>FC&TY.u{c9Bt.cnA-pJRfNIf5wdBJSxI.he!>l=0V:BV1tM59jFs+..Y@JOK}=J1H]ofKPUO}2{r4)p.Rp-*:1?ZU4FETf]fxcoJ]MUvJ[vo]1@sJvCue*8r5Fh)NaqxzPs-7:WjoX7@u[zF{6Owy10B?Rss8s<3B&CKct]mc]gxAu+0^1c*v-aSAhHb(Xc41l$zKuyDOAho2ho=*]m2dLe}^2LP8olwEz)}8uToiuCocU?sXNHo8GxA(:v+#$dySv&PPHm]u^g]X4(j0mvhjfz!0a4Y14>wek^>bKtOE<:7pIx54%D9i)(MWPAp)HK)^K2C@l*})L]z/?1uR)5M3%R2(SF]88CZi*ZV}l0MF#TOmolZA.ED<aC-cZu6R0*<@SMlDwhN%[VKgM.1rv8dHn&u+eU[es{4C(sI+/REDevT%XiCSbHJCD7M4$iWoG#fk6{&LdHC9xiM5YpH^T2o>gAr%iZ+Tzw$20aN%X^[eN!nm#h4yWM.RKxZU44J#6mL2LO-+^jRkS/1Yyzhi1Q4hbE/]lP)]+mlt1DPz8}Z&N)=+z&@oe/hFbCzF:A$-$Vo3]f&KIUlv+JM[pC:DDJ^($f@up+Dj(R!4gT)C[Atfqc?6/jhqakOxkrw0H+a}Ut!7SiD]bwV}Fkb8ZUWFEpBn%5mulo?xZjzIR!5o4:X6U<yltJNmd7jA?ZIrr.q*fcwtdhl0rCr@nc=QTb!5?GD3%}C0SeBJ$]FVV1CgBEgn41&LoBlRk6Q&vEvNg[#z@M>F(0hegp2A-b3u@9#WrCk71cn=Q./p+/cJi(voAyxM}rv@]v?Rj%dGd#dg-$<Z5:y#S8):Pf8]En{>J3VmL({J.[Wy{-}R7Mm*:BSL3=M*RK1mre1?d*L5mCxkGQ1+vp5*7m345j!CPZmxc8p:8fCi/ah@i<LMDfn2a*fuXvqS9h1wlU6SN]:y6^WT&bfK<#gumsfXsl3u/A(2^W<6]>12MxM^/4SdzAWtnMa5M7+GLjL!DmoA!GhJI#r*bbS}=zM[[ZJ17g#t+Id4i5:x0^bai^xcKyRc%&oK*s-2FkjY46Dj%ySVzWuf11/We.kV*WC%c7lDO1K>g+F0n#4{j2bCpAfqZMCrC4:?TaXihn6-V.45d1G+fa/a1e>aEi}Y82X2IJ2bE}TlGn6j/Qfk+&S#+dNp)Se@Qg=U>Z}?Nop?kRE^WO3Ap/Z5W%SAgI({Y?oq]h<^eRwi<Q:5ReJ@f8m4n7PVM$kx1aSHEw:g3B)tj+>d(^*5--Da$:C+iB5IN5^.XRN#}bK7+QORrC]PC:I(6-TD(r=haZ{7(*dQ{)hPa7vK<CrU.FYjp/s3kWC.#vfV8FW](biz9#bkc+8Rc0kUq:<vGIQ}vW8vE1pMo{bx<?!5{gvTDD=qP{lqWRL?uoH+Ea].g9AJ8><>r!UBFJ#i-}Xam}1>cf*d@4)Aqnbat/5Zv.em}a+w@DT*!lLH@oa-BpxBbWx*.Cg]t*}ZXo#APr2Er-U)5!d3?[/^AoAC0%!]s39fE.kTpY}cGrWj]km:4n&hSI?Z:c4JlVw<NL.=FBs34q[LJx=p**d.=G+w{{HloZYAGzlqasxe)epiBRYFQshh!azR-KQePDyb*F?S]8Z[H0ncCArZ{/4^6[m>-D2m-g{7/6g/=WA<6XDVw(j:L$fb3Yqbi.jUl7Zn3#QHD!Y:b<TK5o0<c?ALjkb3?:Lznnq9bDPQbn^r6Dl8qJB.7]@UhN!@DJb)AeCD<U(a=1lYLVXoi^IfHz8-Bad+IgiBT:SRi+^2wlu-Meo[i%>Fm>d9&%-lbO8O6R:)xy>(@D/drH^m%q%%gXT?r4*tWVQ)v^D-<eq[sBPg<cI*GFM)6T&.4/h=gq3*vqvR73KDYK0&[H^zBpY/k2Cv%wv#Q2c?^>R5jriPHH8l?BdnyufmhkkCu!F}777x2KuKx2lrR#ND7:v>kr<7r7}D2+%Rv65xqk6zvW](&CFEfAGsk=IoT^g{Cfk7AreFrb}ERw^y}C{I$UV5fIIdfB}Xkoa)jvy(Plou6{Z6*S<z2aeQPI/7OTR3KS*q91F<}NXB^<Bb>tGbyC4v:jItT%+An0PW>gY+D=R-4H2nbz>YSm2w}t0DISw%Zk0XOQdq/b]Xir}65xcVv{6F(QWqB>&]^VE[[%posoUso[wcS)ZYHq($V4lIu^WqJxF#GRNuQ2r{>VN0d1+w4o?Y1@OmO[7a:aPl=m=l0Q=333^I{6P)+R!ADQdQ}ZuID}en/[DjHQ}rh@FBRa-G/gO^tQO*fankR1CBL=uOqMQs/D/BQ?2)DaAs01#2v-&#[eGeDx7F*7pY3Iq+2HAIh[f1r-)QKTh.vrj2m-8S{QH%XUJGjxq=QNM8fgCo16V>Ysu!V9-b:]i&UHx6^bl7?^JJ4o7gautGx3awJ}fsi&T1i]oqE}OYLN^L6&ztcHKUbv&1f)Qp^+EZgJ7-PSaZrXA3cdx6mxEpIb89&{dvw=!H+S)KFTC3JHmt9#ykR>9T0zkVCPsGVlO:^41{d*1[Wm#V<*N<j7UE=4b:RV}8</Q=Y+L+sRwJ9m.Wx<2!3fz:6QdmP}}&8mp@TJigw{Dr<*%8^joeq[qham}R=<[c7Ng>P]#-taw7x.#L7?Ak7Q$9+i>]n)&5j9LqWs@i8BtTfKpm0Y2ua4<15W2<@3-.UH=8^jXbNT^uLHaW:dWpIP?K+zv<E+Cp6Py3D*0q)J/PBr4f7+a@z[<mU0bVZe[g9h^qV>HXWYSlCLQ9b.rP!FA>}os7xxq2OT]i^6pkA*vzbYF012T@WLdUgY##%@l]NTNMXh8l>Eb?2%ol[vr/<e87qTDRb$CeJ@@v3(l8q0205@UAx#uNg.FkcneWd=3]]8*19*-?s4}+}]awJ6?Eff{/p9^S{[i/W[Gg)z0>$Elx-BT@O^ip(P=Bd#iq@b6(2aq<5eykJs.^o-C-+23e+9FZS&Q8YBB#s7VslrDTT!$.#t2LEfw:-Q?8<i!A1Kg5v@6?m64Ww/QsyUqr[2&#xgn[bH>2!MnbJ:44wA$:TDBh+/:}8e$B3Zu*IG{T0i4YuolMd((C2OE9mD@kpR%If.oJ04:v+Nx+LP)T$@RT^-kY[Y[.j2[/vjt+NfNaFblL:1/LKE:i[wJA6?[GJVsF@}&bWQ:Q>(m:>pNS2+-6<@ySzBqrm]<Zv-SXRvxD::CouJn7(zN6.5lhAETF<8Xj<z4GCsg$Tt4h4jzpmx%Ud>]3dffw0{=$+r!A.<tpy/HO>x<Xpp3Ca!IHVmh)m*![d%feOP+a)}TB*Y)9hTf$1%{%>oMC>53%wOa4[3e(-h0zy3V^:V8}b.3JmGNp.2}00wn6DV5$p%h/j26AWgrp#EUycWj#nED.MHjlKU-3yVW[?Gn%mq52b$R%KTjHQ2Z#]$-VOSFL[9vAABk+:kSG@Pk#yi0*-l7k4t=?!J<6cmu58?b]vh&%[Jw8<9IFi#3lP*-ZrxT$m5<.BB=V3Pkhu1j0(J8K9<6NFJXyVH&+[oV4D%[Kud<4:G)R!AJKcE>194O]W!mU=snuW%QF>retF!u4z6x#j+[h6Ssmg9+6OMj1@*6&)7l)6zU5jZlkP&BFz=?@UHcr07u3HX@tR83{R2!S58+.yaYi70@JUcRv)Qmx-k]GM#206ataJ-8!pw6h=k:-!Pa[Gl9}[@lu{opPc57JVebGiT%CGmQERLB:ig}ZzC{G)*ds{=FhBp>0g)yI=KG7I&MqhUH8J]yEe68s??Bh?BmOJi[AxaSo2>%*(7l=v0AQLqQ7SOa(9{d}loToXX.^OXx{<M[cBG@1DrqsqK:Is*uUho)C+[DBQ7Tc<1N><oQ>(Ss)<X+E&/oFL8@JY$Q}9fO*}(zs9fm2X%uS8-Aq}?/agAlxrBnvzAagO0C*c!6g&p7N{J=5fK!yK*^81/1HjRj{2iW6zr(^N=rpJ[KF=z6<ez:2]BPbsFT]<VJ30.S[pC6!lf@2[crP0oe&m6Kzt-UHg%{:>6ZOUWJmL6cJQ{4&AAwN9Q?.L}4R01.BkjN%C47VI60X-WQzq1U&w<b}F:BB][&.4$gGouH*dotI&d-by9Iw1vvDN2=Q&k-$LczePlADY*C(ZQh.azqOQX)FTIn/tOkt{2rZ9h*??tl*i#HtajBxUQP<C}&t*3@dDdCn24osuRo5GUg!<7EP$u$SJdhaH6YQ4N0jWu2n8PejD6k={NX7Xlp$U3wVrq>q:pmu:GB%qpI2Rwz17MMetg4OT>gHMrrQ9yCPtS[wF4=0138KMtBmAqu*H+b3oZr?2SH643iWdXEff)o@&$hN)ZPkHZ[^sAh9?mX(*up5P2I9#!s:hoXLmLOP/ig/>3mV6WFeN*n{$jVi3P3<[l]YO>c@Db/+p9lDkaUYl+6z?t5JDeI4?6QnM]ej>lrs!AGCDrwGtt>cc{)?[e)>{mZG0CK(AldZ06W5RnSx:HRBVMNZuKJpro!TK0r).P:I+&4%Y!(<VMn%^0*P^&NQ2!Fl$e1Y2>qb(iueeV&C]W2b<d7zSMv(^+^(:^JAZ]B5b}SM?6j!$vX^oLPH}&mF4J)yKjjYl88(mT8n4pa?3qIC=rD*FYcg#0R):)IVAC(}GHgQgJwoA)oC@{^D-XzEs5-msce{8Em#0A.B/G[ZKt5e:xqq[k{eH1]g+COnUx}A7A0](&s/(dyn0^E6J9BmG]s]Y{&8]&VYCN*s92qKkwz)ZH[CFoKlqzS&y)Jhyi$#aW6O$hH1GjR#:)d}0o<K34Qgm8pj{Z<qLX4BM*dMQ03*knWCt![acpq:76Y!Durj#pf5MGXUPAGjHeSa@D2k4BdXgC6@[@OciRG*:KO<Tj>E{ydXai($)/jb#g7&[yBoEB&Nfkm7g0(X:95+uR}c.R7=b<P2[3hH=4/y-FKAjC4Hx2DvVP]Tdvi7BfGu7:zGO7K%z*Ac7HGeY.W5?e^>/<q/Ig8w:1Ovnp?deTSV[BqJ10A9hZaKLt)<DZ7y3JK?c3C2SYK[AHvj4V%hPwb)<QN.?p>MB<8.1PR8bME3JqJ?ljlQs(+GwH++dLX6(HuFrV-{8$SMK!MC0#JvM6JD.fPZnwpNo?5)DXfI!<{N6[?+)Ne8jPzIFKOVwE}u{DZ!W*(&-!V>7#l}ccQ*507Ni&*L6ZnzbI1CH]:@gxs+YLcukeFl]y%l/3IJ&IrHJSpw2l{g{hayVvgG{!N$)-IQL[j6QjO%tcTwi#J[Oq<J-E}i:/^?f]!e#Ha:HF(ZLB2sMO3tm6vRkQ0}=99XcaDxy%gHs7t8:$kV=-N(8r=?by9oC3t=Vs[C+?7)9r87pWWxSfT@P!Pc%bgoKLh-f.#%pE12WiCz=5>rQ+o@e6u+:QIoNongAcUgk6SKt8Zj&m}l%e!z0f?muU#fnvcLDK-[O{9R2Rp4Urd9>/8}qh/5pT01U7K=upSplXENa+9t{?2p[@yjdET<@7td00W<rfh!*y+Yzhuw53g!zs8[@=wQ2LknlI}n}/VVq[3^?8{}QU3Va)6aIthMkgJnqZdvKEWT06+031rUp3[n8zKh:psK$)&h!j2wBn?{eCkeJ/cEq*lCx+F$02ya<RkE<23J=qgJjj[YynWamsCv4(/b9cd.q$Tm6ccU]DApA->7}}hYESn$F?zI)CCwTB8mu}=eg$!i68#e&]-$fNyPsL16[SY=j5{YvjFT1<1i.&py<h#+f&O-y]k@%Fvq?EwI6Y(TCM(m6{T2Hn0?!=M.CUa@3c89GB0=76tgG)0jeP@3>HnS?@sCKerw?>7WHkS^qOlwKSbkI->c[B:dnlTRC1==XeWFt/sqgAWQH]fgv2vdenfX8b9L<JpWTG9Yobw4VzapK*NP3[A-.&!4ggMAv9gP%iK30DbDB.cYYgPkUenKtLAaXq?Bj=GWdV>EA7BEk&%p{QukePV9C/eczMFBT{R6d55v28[kIVTe>>y#xdV9Yc4[w5.I1.yFE*wLRl1GdoK&o]RM8hQ$wJG04T<MAE$oW<^cX>p:Thvbxzor6o-62-JtPI.i+V&78Sr<Fel0g^L@W2:J%s31FI:.iVZbd<:s6pY8Y&erAor}p{3Xb68vxNeU59FiyjEOnxk#[^BKBGM<m!QlN[#&7&)q0{BNf6H:>/qPf-5r>dl%imVUw>GvUJS>I^rQGkwc5tVinBL:-(+cJ8Rape9}PpjHy[v6T1ibMRqw%{>lkhST7VpuoI:nITz7tb}]:y&{amZZZdl!tQe-EN4>5+*gC4g+rf)=l=7bLPQIPPr)#crS#h[0uXIFjK&N2nk.L7)K=ypLRd[ccH]2{8$1QPh?cNpJaL2cNT223S@T#5Lx*jHheSvp%VjX:Dax4l]L8O1u^Ny0nqe:V@<a@uOW7/Y7I[ihC<.Ywsu<n2Oqwin%HG(hHvz%?0.Y^Gjags5<}9n1]u#QRJzS%O.MEOwe^(SjVh%q@BNbYb2+A9)S/U<uVmVD*U&JVi>f>W6^0H]:<iB}Y?m9s{dXYDoAY<llg$<n3jnf=hAJ-DSofM.A:f9ntIRq)f7@:Nhvmdtm^4=tq5!D}cZ+DhAmm0ww.JSb93za2dQS7lQiOD+G4-PFc1+0tiUWbyr1^RuRRf5[bpm9A.V>5vLKj4u1ghypkkz]VIwNE/aMFl8Zh$/{Mk:QAyJ9G}MzLIIlHc<lp(8$zZu:Q.{VVl$=^yTg>j$S)kVj.Mu[8Vum]Go}9I&>fEd:7Ca<%n*Df^V1wTW%&bY<k{3yNL6A!R6]oo#**EDP#W1x3iG0zkyyMr=z=b&r?HzEoP]-ti2GG(Y6Rbe2r%Zx*&*UZQ7R1/?}@bK+M7iB2*$])r2vzCj&ZLy&in&w1r^kJh.erETkm!w&x:RYr.d[/s-FYwf.7B1U98KYf{JhN/(BA*zL+bt9xO4GRz$:h-CgIin6vF[Ko0lK#TkF6}=W6dKkJB[4iCB#X/HW.5%Sv^)UCdgJf68IoIp4-OWa*-Z5zJB6KE-2@n2-Mw6O/bmB3MztrwF[xmkm}5u#MGP&LR4Zo#lQ:[*AJL*jbiD7Ca)^:XhpxUPOgS-?^q]1J6.td2ib3!6v5{oxtI^#hgA4!B>cAR(*QaKGxo!]@s+b/Xs:.jN:gV}E3G^cMPODP.H3:cH4:WKuRY7{@l?.BxlX8v0H]=RH8s[0dcEWko+t74UNc!A>2HEhWC5F$3v^6#x3s[6>4Fd9%YJH6)A<RIEY$=qW6W.jr5LIFX.o6!l1x#Yc4Yv:btpi5PQc]@W4MvcDS!#Lo4IkW}aA@DYk4GCRPwe<pqNeav<%bQ07g0*PPL*6!FBR=trB(#bkuj?at2/S#}h]HSUmBsl<6=AFU3a{<1><?uCk>zA(lb>[RJcV@l[9Kw<alFuw<RgXn?1TkdgG^Ph:w#IC9YB}a5K]=J!FquVVSqBpAne7KPY(+1rtD1VmR{Y7s(6O3Bhr3@:jJsBpG@Cvu1o%7W%[T0ACWx&i=:jc0{eZ)iu+he4SxH+9uw^G7fHdc@-YON=ylK[t<kyKP+{1Ns:O12[KJjue+ce3&8U/75+3]p84<a:3B)J)/(%{}6On-k)1*?8@WZ%?ty?b2wrHqp!Hxs9z.}Bv&iu%mF:XGMRi>uB{nOWt5C[QW<Q=DT657<Q#te1dXpo)PB.MVKINy93ly#y=A5U??oU}=IFOU?F6HskwzBJt0$]3@wSYB4kN3=?9#OAur#c8A1q!e(M&9BEzCX}lG>/X}2ql*4VVqb^s&&<uI}XyLe]<F5b?Pb$Zi?-?5oV8XBN?=zdN/uq[k-}NE.KmVb/>yd.iv1iekep0dU]%=5ifHG!l<exT=>Q1NanBe^Bp?N7l).r2FG?2]-T}DorsK:Y5O8oyiQSXaVh76Tj>]7Y2HDY6:6DTK6$#<ZmA.EPyEy6&HQfo:S%(g^VkpFJK)hC4?rfB&[(MD!Lej.HnL5}:.XnSla3e-6>NNx^dOFG7o.8nx.b5lERHw[UgVBxFf=}tQv-{V7Z9lejDQLfYg8j..#]1!UB}qXVppzeGnYkt2j2IVqLv&nSCDdbqN20^/Mb4Z[&F).5^=%fK!z{J9H0>VachognQR#$JL[bZy?nAgqaxyp+Dm]Deh}gFW<lJ/ol2vmLTs!:fw2t#KxYUMbvWf]O&B)Igl@nIXoo3-<uMg7me{z6L[JETKUGRd-ISGVHZ?}BVb?&z9<#X-YI&IlVm81DXO&o?LAH:04!4YmHJMxWqBsIeMgzu?ab&E(=5yX/3Xh*C+t)iKa2o+D2I>9xwSr*YQv1HvT-HlLPAJuGveHq0G0mtS3+}J$ok?BkwcNv}nwP#{joo30Qi}(/&smEfV2Vfht<^}Zd6#70JDNMyzaI{)HV6^6/6dQ:4>1P=EU6!G6UG@-db^GVNIwhh7w[<s[d7F+n#=$zO0iV5-Po>n3FGabhm7(g4O#B3u4YU#F>JZLLmZqRa17VqV&]&{v6%17Z>V@fWWYP0o}/DSnVmx<d7c6:fFxK..1w(+=+Q>vKa67?B$Px!5y<uD:*oTonaURYDIkp?EEo&^kO>R^7Fb8MPVYJ+./HI+i9sQK2HU8NfaJ^1v3/Ud!eSAv-ns-.BN5ah:eyjXacC2!Pm?na9?!jh:rjNM/!y#crAyJUIr+l^6H=z?h{AOkESYyYh:IH}BnB^7c#U<Bq0ki%.)Y^Pq[DHx72KU9IYnyosYc0B[)u-)c4bf{w2DTOVBMku9ell6fbpbTcm5(^qad:0rBIuz[%nexK7Qm/mHM%5*>:lXc7gT+/#*@^OcQWrD5G6x&fE0{W050Z9NyS54rNehT-N$gmDtmc}*6o3nRKkjN+}[UaK{<!(O:WK3I.EL74>im(Pa<>{u+gf5MjYAV-9?sdzTWymPkH.S3]gZZCzA<>?ABAb19a$/hY}Ijf8(G?dFb3zNV^N73vt0AN<c!X1#Snc=avZ4[9YADjgjaN5%c/C)}W7@Ei(9MB<G5&}{H#9ZO.]eE0DCdTflmNaJ9((>mm]Xx1!3ij29P>>@TkGTDgYiAp.jHCX3854ispa]EfIOD:Fr.G>zN0$k1:c{@egiE9iy9qTpx0K+o}aJrBoXh#[p.o&I$Pwt92TUSo+/B)X]IiYo%4*FdYLuYFx6fWD@kkJ^BH9n:5X&jRYO{y>rGOtW67i(D9i$<^8xZzwi2YRbvo{{(&c]vv$>B}BgXrvCd8UhSWUH>M=FCcN-a0a2[A).o/:tiGDyF%Y9Sx>GrNLH-enIuz]L)&lX@Gv%>8mMzH]8C@<N7PndQkIB*q#T>B*sfz%0Q1{pcckh9H[&=yuJ+6l[><@L.-PWimxLrUN:lS@wB+^3okxEebh=rY{O975u/o84LiF8inpHZ<mSk$HLlp^IqbQ!xp<^m-iuphy1f$Dt)LFZPk4f-:O?Ybm@a{iPT*4x)46uj)tW]C#=IXiRI^kN)1{#k+hid-h>hFk)bdcikHYEKL8*8oJo&<{@30tmkR+3MYVPsOA)Z4jjX?%!=p2+g<>mN.&1yCM9LP1q*Bi4(J!=E^={7<2<V(tL8iGbNY<7DphOP4WkkAD@P}t17mX8tSqU9u*BW.]A)7#eO]5}lhEKnoT)m+9bMjbkJ7A^S[[Vt1Ge&qo4zv]?r25@qq^4dFsRF:j&NHtuqbq%v%={eH+fMVX7i22HFW9{v8dVai#XYO&0nx:5#^Sa{X{M2uU#mVnI*c>q4f6{0yiy1z>H.0tyJv+xP0y62qB5Qx%P.t4nQJChi>p[VtYCwAl[PGHY%l@3k4<}o(uQBImOHJ](bj&TP*tG&dWTD@#FgbYEQ>6y.hvenQe4DZbgegz>L4)Ww.DVpIX[vJ72}a<o!y}.G$.KV.?HM*a45BKwMB6gA+)iRk9]W&Fclp7<2c)eJlmmD+ae9bQLh&:{b<%E}N/nv$P>5J[<Km7]T1S@nkWSNGkv**mw!xN?lNIUg&[ANF&s@7=7rQV2:rPc)A1U(}$c?1x3p2NZKhwN0L^LRlmOF5kzJjVvOLk>}G3MMW>WZD2uJ:5{sma&?/Y}jCh0R@}eoNnixhLa6paWr(RO[Ey:Ul*J8*%Dn)uy?o9on]>!Z:Q9xem4K&f]75/Ad&5/8zFgXC51$!.r3Kjm{esks]j#xjEY)X=hOX^<(t!DBnlYRf.tpkg]1MEHBb<WNp#auZMtu@3Lo*+A..+#gl^&O6itHR={9/cd{2vsrZvHMg8E+Bc?4+E}&RvE}UX/!A+xb!Xf6Ve7)GFoi(D9-Qt<5G9tPI[*Sw$Cl1:MTobgFsei:$rr%iAhxE[v@BNLhV4d0D*0{Q^x<f9%v3%Apwj}Vi#w&=I-25y9o<.TPYtON1y[pZ.B5MOZ5w76-!0n{h7+eO$H50sl8AVqF8ynj@g[xEIi1d5VB8e>SGEB}%60}vT{fpgd/20wq2.+4$-2#U0^eC>Z1.JP)>yGNV(=#@eqH&{BHQ!C@5:m[>N0h*JHDXp$bDRsX@I7S9fzv)D2Z8yLN>UYXfv[!#43YP[C/M2?XW<+a.Urg]}1Zc<2TV.2Iag*FS3#MY/wQt{0QhEWLS96akP6bmmVb=l3dc6Cy*!cOyg8)tHaX^J#.-87?dyjGdJ}+-f*L@cGT]lDuYD7dCs{WQ:[[}oFgXwACzOB[fh@)gB]B35z0(]scoWU:!aMwb$r$Xadsn]n)iH9[nS[Jm>Zoz$e6ff!EOeB(&fFx<XuDlyGA^P7Fm6}IR:>BjA.78@]a&I1U+]Xxk:H$gjz:m[2I<Rkho!salwh/G]KxVPKF&KN{5ArFHoeaZB7K3cO1oz.)v)Ijrp:$3>g#0qX7DnHM:8J9?^[yA4AoDui[j(Rtxj.469x.ct79>)gqwAo+)30J7y@H>%bS$qoMREbyF)=m!Jr*62D%Dzvhz&a0CANF!&0Lu{5ks6r&*+Y(3}8>o6Y*/<<-9JDm?hxNfEvjeuyC@pg9wfM*PuZFF[]Q/fh@)woe?]%rQf#SC(07RGDV?8QWwFYHK=m%FM:SaGbzNT92{V$2sDp}VkB<Cw<<-*F^y!G66A4PL?xyYDd1#]UTAoZWmX&.FbmkMFV-8(Z[BI+I)!7--E.rzyk?NSCve]XT9yXe-L/K<tePu<wvawQ.[0VwT{o$Qw[rGqej=LSfLRz=pkbx5Xl?gGEYUMBElnVW19=8mfXSo%j$5+bC4b:&0+l>9feOJ6m$H9<vCo:X}wTiQUN$Acd+@}HP3&J%YKw>kw1bBE5bau5wEr9qk!BSOY%qHk^:Ce&k1AxyE+/+8Kk1&*ylM/gNj%ykbo/pOPE>-J2[)v-X{N3Cff<knUijy9f$j<)g0%je@Xkuxx^W7ebeZahu@mv:@<9v+aalV.+ywDI8/{8kq.59w)Ofwm1]TwG/ZG.YDF[CM@DxK3:M:5!Pok)77#@WcbN.>34S(jb)tMfvGnhf.hayibpLOBW:5ON1cf2gcjn-w)azKW-Akm@MSm6-5qt#=$MBNvwgNi/)kbwEdIFP!&y1G0e%+:Ds0Gqwyul%[%i3i:]I/S4gZ2D*U8:ldov>)bII76Eq=m#U.g#d{J.+/5ymb=p$7KgCbh&JC1dU/O4vBWZw=[%W(/a-%rlg0L(2AM?#<]iekmJbG8!VOKqTOt$NjEHuZUs=D*NE}@ZnDy9N5-8>>zr?t6^BeoUP3RnySDjnXkAmy)k?&+=>k*8/Me7/Wm1nUtjHWayF1z6HFv.NDK<pd-ccP4ImC(z]<9BuU^AEF@u{aLwDnj[^pi!IuR(A<w8p&-[gB.p@hnat5cRsaO/QF%ol7M0h-=W#]jF)3k{=T+:JPR)OMI>$pj*Dkn^ielDHtnc8I0U)MCwk8fh80oEM1rRcw?bZnw.CCm!83tR-vlW5B<$?l8Ecp:cQ9m38XquOUvfL6qg+0sAI(aW+.C:^RAURPa}qLsnXt9n(-j.QUCJM}g(mV}2]dbkmc#*CRK%3qLSO!2R?[yGRQS?PqFB!NV(sb{R4}0R3-6{ielWp]>uAREjv..glv%I(7#[2PJ4@:VivZo26WE4{L2yJpK6xLc+HRQlF^6uCoqJGvitY2dm{QM9tV?C@F[>L[VXW#G&*en=f&Xx8l>FKfk5Jf5=hs!+D1GsJzQCfOB(r>VIiL.n.N+CDRKw=[}4BL)-9xv-p-k/DOxXPdh.++F!g)m%Z3Ivr370bsbD7[aHOxoW}N%5bEr@&hjz^ixb-C}ENJiz:]:CZp9yHap(f6PCY4jt8JI</@U(S(x3sms3MDlmYKg09fc!0yW-BZRr!j?RW(1>-S1od?VFHlhXsZC>Ns[mia:ksJwK8>qZaFWEOq$$wn>K2d[i!^L(DbtI^n@fUk7/4.c!b*hVnziZ-1%4Td.q8PppmYYy1j6k9fifj2+z/+r:WVIxrLS8Stz^%8c.BC-@<:%[vefgQo!X^kD[Y#ajhIU}yswAs4^T*TQUVbqT=nOSynQH)Mg5)&u^mC3rC>9YFP>yCcMI:cFcDE1iVrVD64)mC.iiqA.Nb]EK1&oJM.S[c/Z>H]m<?b1tk8^G*KTuNG^o5}f$@^:kdpGst?wf?&m<0>xBVfP2Pp>)kpiiHi%&dboT8!(eF>]SbXpgx(lzKv?1M@[56{#WsaRV:b[w/(3Q6lNMdW$E:&OitOtt?$mb=)e&<aXUK:IR:=PD9aeB3Is6vt8fS+$v}n2gTSsgTx(<EN850vt{F6Ok-e1h$]%drQa1SvaE!CZp3C/t[>re7iSUv:TQ$MjnZPMgjyU0/=JeydGMFy<Dg=jGx]?A^I/z-Kh>teiLLcExy&4jEWm[/)Jcv*(TVbiqkY<wIYg]iQ)3HOOc)ytAs*Tg2-WmkmB{:!Gmj3G8sK.6E/8hjabC%0G2>9{U02*4xX:[kPH#l[Q6G2=b>4#1dhL{63Rt2=Um#>O(/y$BuN@5WN.QaA/F[.-aW}[0O?3:g[*e3Aj}/EJk{$tgpL43b5n[vSp=VHGXF<s3$-4?^lDp4<84pcOEILv}^R/t7Pcu@FH{[}9O/P){7[*OXpVy{KIO**[H(HP[P0tB-mr]p.[=bWR7aOD[HOvHe6Y0apfIuCGfQS=-w}Rb1G}Qvd7awey=@H=+KkiWd1wh97O2*H[NlN[2G8p4hM3cE]>C]ShB6lVm[oQ/y@EKB/y1&Wa<2iimFK0ZIFMq]d<0(xXrq:i)pFmQNfLchXwidg+xW^CWkYx5WhayQZ#>*t2CfNSXE9T7dOek1qHX*]Hs2Oz9<N/k7Dbmy.ZrV)qCZUS&mug[Hw-9-m0/b]aaMG*FlY$Ux!!q@Z<BQLxbL3vaEt1[=GNLJMrVkTpCsG$fIU/aJ!CJJ(db^(w>2X9IR4RrSSb.Dae:.Ke#+E:HGjv!MzBmco?gV/PZ#QDKF=yQl)5zkpr(bIoRMqL]k7LR3[p28ot%vnGN!qwG5/nOFl-6p&pi8=-IuT:]3HD5U%1xIKzgT9lmPZ{nejg(qiJJzx3L-6?lf(AcjY9D:FjNDs#qIPU=ii5J>$6rCL6<d<SYB>{&qK1t?W:KejtJ#>-GY+/5W6sB[Vt4uLgO]iS4&F&:n(@QsqJtbwHiun[GS<W9k7q3lx]@NkJwF-W:<}LSdQFfkVypAw(a2-sWB>hfVapB4UKYbl&ma.IRE<(P4?pdKlBya&ysehrZWuk@H{(=</>z{&JCh{MXX}k/=A629^k<9IlEHI9pf>hcy}3odemws+HDzyFHd=HL5j9wEOII0^vSw-+>Uf/q#PztD(h.9oHrEG?>)tckIcq-=k-gbIvPhqu?Yvh%p=++fyZXr-/E%g-zD:&p2o<oibp55R(Qizxw?tC5Sm8{?c+pj#U3P.<xwGxC[}-u0Zx0Uo)jz)J)SH@h%.-xWFfhXM:M.a+#C]pz)DsC=+79+C{xl-!Hf!e.FAi=e>sK13M6*<iAjByhU1l5T&F>}X-[Z(7%Yw@t?}$[:jtAF^?eA:(udoAD1#p]!Z4g]?ZY%24//SFmK1Im/WY/tBKBH2?9ATLVMkVv?$zaC}}T<W[<?k9m+1z]fEfDHYzgtB=NM)}g8Q>*=mWz8%0KriTG)eWBX/D0VRErBjmbJFTxRMomlP9k?tXmuB!x/5NGUu3-o%N:YvZ/LBOnC/)7-W:6YLj[OH0Gx2LF.vT>9g21/&axXL1QZ+fW)htfn)t#*Y>O1W-PU8SWh0rwdTF[:6CD3s5$gh]5D^#:{V}7:Kc!R:66B:EiEKYv7fQn!Z-S)jJa]/V&0sCTUWvT=Q/ZiZhh&A6)L1{b0?w*nk(F]Cty[$Has-:JKUs26KQUAi^<.u0Ojt:74tTzit6ePUjsrF3<Bx6eEdT!d?N06mTGP$YROb3I:UG.EMT-d$e#(Mk{K]0roGFwpkF!Sye=tkfvCyo}O{71TmB/Z$6{:v-2UUuU#va!j:NQQ2x0jfa>*DYH8wWJ?35T>UNLOztci5bS)w=@RxIlDEY:Wrj8^=pndcKp^GR>6TG0dQRuf.%moJ+35h(S1Bb]hv5rch!M}[P-BysiT[@ihP0SP.R#13bB<<Nxbu[gwI!5&hYj$N6$L-2bJt!FG!koj5I4NPEQl+^@9BMI.pwK}]zfP)Mq^$t.R&V91st638wyob2<(DH*s/yP<)&>ONkO90l&n{Y1v-w>4O6@0n)aj5Kv^Oq6&yr4umfkrm.jTDcr2PSLJum&tL%FjmrSSwayxr?-5-w<O-jvonj8JA+<-(/X#T7sh9s!D1Fdlu/a{z^w@Hr-]5k}HK^3q^3lZICc*0Y(xz6tG8z]VfNE}jsQ^yfj.q.Re+{Ca?.-kNV1T+)3*JtS3B@9VMu^p7pd!J(0wFW(7x[VeCuB:MmK]y*vAMVK/Wzd9q=w/(v]S>%a:U=C0G$*U+OZga&5+!0V5<1E<m?W?k!HeFDA?flnnx0*:9kHJ^r5&A=q]Cq8A:j]?w.iREPU)P#d[p+LlR$Balfu5hc4^m+m3St.CChr/G}cXiC+1=8JbE2ON#OoG8(2&Pt{W$7)=.*yz%<JI&jEzB:^{&cG@ugd>%yV&DyL%Jf?8mYRa=n1NrWAZ^L3w0G4N?u6OodXz>JjgdR9oxM#g1+6#LaL(x{0K=?WMz0b^lU2!lzU:qnj[kSa8)2!qgb&j@94n!bu)1/46sakSE3?{mxx(hfKQBOLpHxVz{C[U?sTJ>2+>f]^^hB4yCJHZw+G*k>u9yeQBsnP^@tl4<])GOd^&rF]FEWGS}<n}*IrXaLZd>A&J0}c21T<TyO%FGM>&tnQ^xHDv.k[261V>YtCiJ?czH0ZRGrm.VF:kx<5NGP+BEzwKaHe92<OUhnnsafKSMFh5KAOvxx17=<6by5ct-ut/JEQliexsw%Th>[uCa5:!7KzfB4l^kSBM>A1iNLk(/!G]egWUhfDTJt3/QZl@R@6[#Z:WHwemp5fiW(c&v=yv2u!k5v=6u5$rpt.opWG79lQiK[lLmdVqo2GSPRkKbx{Z]CmgY*yT&y+F=WG(IU9@AvcZplgc:Z/Pi}B+jhNQ.etX2[R>vBHiq{-0&7rOP=}qcg>YKa(Fqkn$8s25}xuC9dCV6mj?}IqK8ExQLRXJYLd]}u#e16:x2%%dN{+x-YLXPI//!E/CkIoB4q$e9eSE2HBat[1$P)7>ITN8KmF3(n]FmeO{%nCAY2*lMrr<&!pS8/so5^ql%}4}LA<n:Cr5m=S&-}:FGz]x)X:#c99?@>W0sq?vdGxbuRTii8+*kA.Cb^Eg*1]6I4R{Dt!XmgfXb@LJFE+e[XmTZItTirahDz*Qi!.EgRp8!(S@27F3p{KZ{Rpy(QJ!F[h3ziG6jF7mo?^217wwQGsW%Bei-qE{Ot3dpc>LZ&dCrw-}9$hdWY)YG$fppgT-eVp4Z{-GR-mIrNY+g8G2M!Hw*RqAjb&m^$F^>Pdf&.tt.6tM4^PBljK#1.IwFe1WsOdx6E#xO$8eXl66@T@qFA>l:x&<^2N#U10nwMnutrVp51+reO%6%+nc&N2vQlmVNH{<o+2WVOPcfUBI^#}b}L=iu{CX6u9TO&2Qkk<>38QJ:29w8hj=0}k]F}atlAdl9R^7wI+TeQdp&tZm%WINNP:K+lH%=kn1Yx.-7aiV1oGGf=%ATU:n(3^0]c9qN{e+z2ItvrzmY#!oFFvF5B.O<d}*m8HYQ]Ycp69aC?WmSon&rgn=FyNcge1Z2+<[eNw]t=FQ7g27$C:X!kDWx4=wxxpkK/iSty+7e!DDQn&!ocMN/L}N<[%Hyzmjh:#nM+YVxYeD}rpemD{D0<$C/cIl0K+O!>oo/ex84BKrwd5>LUf8CT!m4u(g#1D>&7e1:r{{bHEs@>%$7QRd2m!yj!QLLor0H[Bg6M$DzYsGGpws4G)Te&M+Hd)7<?C+[D-FN+/GNupqz40I}3fLw8i<U$*[lR%Wd5-=7g5W/eS8nG!Lk2AgGe6l.7}{BcLHM7Nj=30k<:+%#SL9r.f=kptnfJaQ?^7*y>:bt=JFSUKg*bVHH7{U=F0ODFeIHdoav[q6r@xxF#5L6RW8Ho4(v1c9g)<teCbZUms35[Oi*XopMA3N53:eqh]]XmL7<qf[@HZV?TE9.vKA&u]0tooE%:Qyn={%eYGn/Wz>H7#bAkhoVT5=Kfw}Q49[4+16uAYHBaAap3[54U2+kR}0#pS:KRkppoVgzhc}ab4[89OE$IX&-0uLw[m(016OT&2RvagvJl^:/#37V/=rrFfq^vw?1G@l?5f?3=A*cH)uM3{AkX)HxOPJ=H{}sse+oI!qhbkm]uy}5GE/SSkO>PK}[^Wzwublypig37F*AT<$^3:z>1U9pRy)mO0}Uo7EN=P6z6SMT1c:j.7G(LF[+}yk^tM=q0dYnGGgBA2GkCHo%G.A/OC(?mqRQtem)$Ff-.sSly$atC0Laz*dV3FX=hvnxZT(Le^yOG<7MG(+wcPYThx+f4KlWm)ZS&G5Qs%I&d&FfR}Ee{cgA!-Etq^b1xyc+f=*p#^YE&xHiF)vk!6u@492hDM>)<obm!%qs)mt29@S+-KQafZ2#XcbjKbh%pZ^[6/<I$}k?o3plL#Z0Qh=>&6VFWGSb)lT1.@-DhnaOj6hg{9YO^ys1&gK*KE05.FOzjIIV{DwAu7Km58cx3]@lYr7SbUA-=VG%pQa([m+9aWD:<API{P)gEURUCpv&:gJY?o)=<j.sG]L<la#XPzo*4*oI}t5QV6/awpT}Si6K%/&R[*gTKL*<I75r5:/b=4dZ-LU?)>]AtS2a}aSEtG]q+7(kdfR!Oquhw}Kx3bo(kD6XS^8wo[IX<fvr!TWZp+K<9Fb@D1=n@h=-leXvs}UsThArTF}&%Pq81xr8ksS?vh5k=WFA9xF!OMOCe0VuLJ%7^58G+*jvtI?>LiAA0GFczsw[vQ]KRlb9oM](nFb(9RM45J8r/tRT&A*?XQ(JLDQq^aGGKbUDG]D.bI+0.4$ImorZu>LF+>#VikcfPLA7VW6-uxCa5r<3rN9JFxrO8k{?!?KoR2bz^bl%.Ee<}5l!.UGFsRHESX3!w3wY^gb4Fn%+xbYKol1=g^IOW0B%-qNPHXbZ03}UlWJig3paAB>SxuR/LI>N73h<ui2mhWwf<K$qRZufI[U.kL77h!#EN}SS]Rv$dm2p9!GxT@HARQh7&.jQD=-=C+xLIWr{1N0hYX6Vp>>3^E!Y(@#s5w^Bdv6ZTi+IU6hh1g(ywyY%FI<QD?2^z$yKlYe753D7S{9ck7GCH%TG3M[cg8}!wF(Kv9F:V33scEHQ{@SYqeKp>.RG]3iZsQlySY8QHYGb&T{ONCRD)Qz+dhdJ:d*C}FoxHt6gh9]zgo=?3^[Dh&L7xtvBzt(gDv2!RuQRBDeTpQ8tP1w+F8CU671TIY8)w:20WZHYoI}Cq+<?J6fgkS3TG2]pLtwA{2Rqn+et&Q6i3*s9:T6C8jT?GX0rd-lbSZ[paxkER#8dsJ4=FyDSDRn76w3Ma/.sbwi]/>PVF//4?tjrh&*9M9:DVTsK(5sAU851loB7U0V[AMiFw@[WF+/H/u>lobJIw}wdzS=KgST=-Ky.J1e0XncT.4NhyVbe-Y1D^e!^1IG}#l?f}jM<9{fazat?qd.<:ij5L:$I<P$R*H2BY?/eloz-YH6lG#R{+=%.[v6P&l6P9dcvU-rgXU5A{f&F]Z!2/hZBa}ph$oJv#/uGe]8EnZ/mNGH^73%0WGH?DAXF8+/Dt^oLi)7r#cF.soV+XYV}G--<qxy3QIpRFzYnAF=JIBJed&6iuoMKS-ll]Yv79BvO!dljrNT%+uy5lKYUs[W+3U)1.:fLX8d^A.:wauU6GQPrK580*z%h)qj:Fi{-B+H-lkXe*m2lJx*8m:JH24*H]7%P/PfW^FTaz4@{j4U1k9NrXy6t<r?mbQ$XZD1+CFo0ulL{AVlx4Ui@T0a>+@Iobt.-18d^Svl69mkO&6hh6UsZRxax43A#mSNSM::kJ&-:0.v0wDc67sW/ekgK+gn*(nLM>86HHo8(=Nc4t!.T]nn3J3d??^u]^Do<^TUryW0t)X?aFSJ>tPS/Z}sq-xgXO9&t%/p0aiT[d*w(^g{!ZV}U&6{]J*ipg1acEA6eomrl1($H:!X78&W<#8kv{?ccTmE{(N1e8[xf+rRi+m>oZHQ2MS/?zel0B?yV+ENz^3SbPLf#BBba[L/RuE%bf^I7Z?HaNDdXh$yNFqX:c1R[HgVJG2/66P5cQ=v{Vk=I$Xkn>Q7-iMc$06HtFhatwkiY2#bc)s!F@q+*3>bj@?/EPRK(0+<e0&1zkoruzb^mHJ4qSU*qD&QhGI[hA4BHVp#ZQDsGmHp@6ScsM7k1^UAJl[8F&n}xJ1lNsVGe[$rQ56F6og?^8bYC<HEiKZIzTjdye$f=fbiFcdJD%z8uEQj/)If>!-}96k5QS&/AtetIgWKA@3de5H7}!$Hod+z=O85HgJiSv<eL0QV21p4zK->8F!#bT0@WS0h!ZN0t+q>}60J8Z)=:yu%sF[(^SJEWyR%6!I1va4CKk?RW5Nb&sJ0E@s<AntT.kJ?dm{T/&5+7RX2Sgx$i4fxuuel^zuBnPc{qEU.ke:2^pM95EMgB^uNiJ(f4]YX^LwYAeR9t:=Ia2<lGbGZn6lY4Z2)ZNdpLgg={[!pa8cB63+?HtwP[ee}0[cd=EXgKiWd9()M<nx(O%Jpf+gRG:RoE[xMitv0bD[>^vqV:lNjkgIgEgi<PF<O>i6lo%2Q=/y529Q(-.fc9XDBn>*[789{OaO8i4e?svKS>2as*cCA2My*K1*mKxRtNbp%z1]Lv&aU&VRpp0%DY&75kx-IA#m<Lisytr?%dAp3sSreDA$)Pz@n3OsOT123u7@Ca1?aPl<}HWs[4S5^krh6(7@Dxjo*(u[vb>PF7D.+#Rm}2Aup/[{Cw*5V]7xop@Cm6dGgBgm+FNWe<SKMTIOKzQKEYCJ&j}&QE>d6//%<bnzM.FbRn17>b^3o]64l5h{NH()A<hUki^*9.7*YL(p^XELib$Bp+m9VvE=ue6dulb>NiLxo(V}dZO?/>t6gS75KZ@L0iQf[Yz{-H{R-pSP}I9Npv+CtcTY2jCv/pnBgI9h}W=nJ-/+9h]2M=(lsdL8ZR9^8ezS3B.pXf4tE}F[g<gu5=X<b7S<UPs=:hBU[D=0Mx)rh?YN>#I[kyVvVDwY&fj^k+$SDj9YV+KrG$qc:68Mr&B4Li(*C*g+]Z{G2/HA6G^4-N1k)(x2RvB%(0Iur)}1T!i<U8SX+C&Np?(>.i<z^FN>5R+5+wK^PSmc/6)&uuO$%-87Xg8HGA:0O24EYPa!@SF5UBU&)aU<EK%UfKc!(=Z?BE>8pj/c9QzJWh87X%P])d7SkZkG[=Cfj6Q(bGpH&ULbk>#pNIp.?bkc2B?/+>=GIY*a=l.ou!1z*4mn&C(ie&ex2H^tN(X%Rpn&{{5..h631lh:YnSjGLGjP]8>jIBQbd:)5XhWLt97l>D]Q<r57l4oLDSOv/J-He0yYQ+::4sNjcroq9e[-YGhURVG6:r./g54wy<!yu/[&t.SlnkRY@=#@agI#@v{2kHza1Kr!Nzu>J0UQDc>32iPRt)yZ3NH)5*nI0MES6G)M<e#$$wi@t&@T%L.ar.*2r/j4VfxT%*o8aGp78Tg{4/=KzDu<weOgC-e+39o[7$7tVB)&$*JP:2kH)$zWaU4&a1W+F0-tWfUf^6:LPk1y2-jl1}kUp9OQC.kcCJG9E]<#1qe/I.:KQ$q3rM:T0t?+O2E4JCZTVsz9)Ty0Qj#OD{71JM$=7W!&t6/x:d+ap^mwcQqli4m*ml??KTi:xta:j&>=ujd=kJUQ*tkx//6KnTKE)4oa]:jg)FO(#V-66-NcBFS#CmT3h+=dQyTPQ#L8gS9g20h.$I!R(0vl@EE9F}KtgI9nTHjo/rMGW{6kE3ptN{6b0^$wxh>%]S0Q5RP(zDa>.vY0ZVN:(jh!0g+n^!KbSfCJ-?KqAD{9V.i6l50k2eMeyVSW/Yow-m1!xG)tEOnKm-e9LqY>@6W:&3WH0rwCem^jmhY>z0Ec0{sUkd/[#1W4<L(AJ5e6wKA[UCoCaQ2YlW+PeYfCO-:k{Wwc/GlH:hg?oQUUL8=d=y7uCqKSU1M)KQX<0JKeoH?I$2))6@bGJL:PNH[AKs9]v@<TnbkmmJqM4?4IKcH<uGp}Gm5I8co7Rz>L{cS!xEvetSEb^5ph66t:@J>fuX0r[.QM[*$}*taGR<p-^71E7Pgis-%Z8@<?QRf#1f6A%)DZZcsRfY6ava6sP)R03{bb.LK)u-L)C6nED$9f+Vy-X1kh-Lk3ws-kKA7rR:ckg-JAoBg-Lr!2b7^:W]7NqFw:RMc]GqWQpYtjdRGqy:SI.D#<Q64zsw^N<c4hjttW0Z82-qs[L.6]?Mz3/}HGd1a7Ccw%3-^q4(r5R-4)qWFm?k.B*Ob)CIes.Qx!OM/tvSVYW+&VvC{6Lx)xl4Du84xx5iaG4h$Jp*[d5F4U?YnE?=S.$=49ufF:*9u]j7^O-*x(e@a]CZ$4IOa(f5?R<4.c/&ymG7(Prf%8CKu3bCI)Ob<5]$<LnONrCPJ}QkN0BVzT5*T%LFIOGSHytXuk$wge/-bQPAi2N-}f8)ekz0PfN=?tu8>Fxn71@}+uG{a6Wuu?-RcFbbdo7@ga]wh5S[Nm/SiKIAw%aEwqKrYUV$E]G95X1gqi-LA>88cYJ?QJ-9rSPhUuXQT<R)2AD%[</4nvqxJN{6]<n?Pk*PVu-ks(-rhiD?-TFpEOp=fxP]S7S<)fC1=jo]h?{p5$0AEK9b68$+FAho5Vn*tjnWRn9wUdh]?*GPEU1mfjHYb(r8-BtnqA=E0y<zO2-oJ&!F557SaE<xmZ.{]4}uJeI:x?*66W&cZ6FKO22tA-Z522cI!yq#$CSBX@X4DiZ.Me?s5u&c-b{y*gSeU1]Z=Dsy?I@x.fEFB>aTL&QGUejB0E]di^&h2eAGd<zTEyFdehk3D!A4!+dZ[7k4oKaSGCa3Ch{Onf-4g4@[AtzzV@-[9x4&.%G3:7[O=dK9.=exutmVK{T=<Aal:IM1dUdKWO3x3$Dr.6hd([%u07=<IB#oSYza$W{XAPxhe?fU8OYhD9urktBX3OvvKaB2]6)o5:[M38Da)%BQljT#T7l47#8AWp8udru+:/QFeXL.w=<ZD}n>T+?i/K9C57^s3=0!KYVLny[cI7NCT6s<OqGZM/+?oCN)t&wKl>>g-&@/r$W4t7TDPjBi9&t1[oC]!!Yg21UNKNFOvjYihMa{(Ks>[=i+pHA.(a37<V.BIo1g{RiYfrU}Ep^1BuvAqsfpz:GKx%>=F!CDvAo[AI!4(6D8v03bo7SHxYr}t7z<y>j+(F2jG9Aij4o5-Si=(PhZ&4Aq0-ytEp:/U&>uI<7iHx@#kGhysRO{ux@UjF795gZ=zQ&?e:mHthRUDN]8mlDB>9)NIX(!v@rzTs>BKK{kBhXM:8(E7*}l=F5%0uC#v?N2IO?xNGtyOZCeY:l5&U8-pT5HlD.>F$sx7]EdA+VOMBc#^a{3%4wfFzp$CVy.0=QYDY[S]-dapH5y[Fjc-@QHu!@TId8Mf++hH^0I%$-@z=#yU!mb}t-#OpgVvKRBpob9PSAV>V:U)-+QN:s7maxe)EV<XDPkICB<A{jJw8<gsD2Iv7VWdmPBB34dvEi6^$y*o8gcTu4.WG]!C=@/<)//VuvLT10^OMh(EJMycdVfb<>i!fotJ2-AiF]QKBQ0!%Ns^2K0XRFfnUeR53g6^TAwua3I/Z]oy&KFst:}L3b!PY-(h4:o^f#9=RjWA<afm}sC*C-iG@(3!^LkCV/NvO>K#ZToemB^IR=mWs1K)[jBUH.GIgx2cl}LB-i+G9kjA2)&:pv}MWKtszbc{PFsg/yZ}{hgvF7>U3Q0DR0.=G>>6(z.nrX7TI?<VLm%yZ71[?6IqKVxMbca&EcZp.Zw{7OtXpFU01nPmrh!VvDnb&0rfp0ciD+[[GxwyRL)II>*mM}4z-$+t2<kB!2%Ug#vE%{0z9/=?ylt=D6u3PFFWap+-Y#E9Z0XF&b?JBQr6C+&^i1:*pk=:8rA]d7=]c0=05KqcOu6qp[mpA$Sh+^@sUQH0JG.20q-l*l3+h4?t]pR7AV+WbIQiJ>Fw*TNvbKIO&xfb2mf#g61jYor?:}:Qcr0K(K3TMg*y>-tS+.[0Q5pC??V/S9t=v*Za&8Inhj%*$&?]hD:-m4:wNF>:4js<OPT-4Pjb<SmB)%&@T5f{W?0{&qOK4HQ!3r4bpon7:o8}9%OvT*4Ldu7qBp.!To5/19A$LUS2F#E1=y:(vXDjmOH/88)Uj^7>(/p1.tzOk$RJnJyywdYU0KQt!Ds[=bKhLe0puO$3a8pKD48vck/fS<PHecE^nG?&}B<h[>I=t{[Pz02)j{jy@/VWV91ohP&0*U{:Of8C8t0mTW4(9TsXLZD3{#jB$[in/CG<6&Fs!5dMgTuaZFtOa-ybGp.g.HKHvxnnynlgh*w8g*Y7tw.GS^[}FB{O]6*s@J=UhaOU3un.jG8}?4leT$Nfl#D?2CU1&oziQfr5pyLCvuzi9/wFK9-?6Bqz>qoOe*CZ7kBERhoqa:O:*q0v<PkIj8$IXfVVENA%96@HdTBqVgl-+{4*lE5)mys=ydn8mi}&SzM(>v8Ce7OrzMI{M$Ga>H9/*0R!ar@*e8fGq-d=%UAiv.1!*aoM(YBJ)Z1@JgNizv=Q@=>3Y2$X5P17y.I4N)y:18B8^a&/nfPLy+5Cw]07uC^8=.N0>pP}9Jqdx#uWUzf^ARnM0c6o)k2ypfIzhA4gr(+1qlV{4(S{E1.WsoD&+$!NeF^xAaq1p?0{V46jC[u?NHZC6E+x[vOtm<)i-2M6!@G.r1<y>7b[EPPhvqCKm4tl&nf!mOJ{Dh+Tm3]LWIjbv^im-XIt=V&EFq[!pR{a1oVw5&lsU9+K+fg}wk:(Sc/drccv/LQ*Tw(J^Xv<OK(T1$l+nmcIa#e(K.TQ)m)#:@/9E:i6jcZ[5b:TD1@Y?z.-qsEFcIet^WACW}RAvONCT=>l^}VFA:U&ydrMpoqxP0h:uWlCHf7VEO9L+AGTn(O[BU@<hXTPBx-ff9qEogx30k:-oXHtcCSoShf980UnS#mZz3uip2Y9.f9RxrJfxj>3?)jNgqwHk49PF4rAWHa1:g#$s5#N/6wVAGjMeiF6}bL9Rn5ECiNAZ^7!i+{{TP6C#BaOkj9Gq&e9O??EZ{UP}BrhTY&-q?smhAV7TZd.Ke3joz:D-W(+dQ-n(gCrDdWmS^+J?b$YMnLH2vm(et)fq8S*O.vr18$Elhtj/2YnXA.#e.d3pT+ob2k<<e8vJea8aYH}i@!09-jWz.i=W@Vd:.$f{vn$(Vw>Yv*!C{aq(B0@}BigCJ/y0I<R>L5Af{P4hgE)N{2=b(->a5dj4PKXdqMqaf.w$:kcl9uvyh#d&VHscbp[inJS./{sWtr1-hSOLf?*[8<)%xQ5>dZJ<?uUrPdTC6K?sjdd&}+:=J<]eh6b4i(9z8QgL$LD)=h.RClDHI#JxR-6[GE=pZuMYw:lI3o>>*gppbCC(:[nL.0^(3CRU(Z=^SY^W&<NpfHutpwUYpGj+1GprmZl=dBGJnn9Fy0SfL%o*%Jfu66:tZH&X%DSs9Tjh*PD}xC?Xkt}P8K3FW)Iv/#&=fY*f==o*1(ug7zayN03t9g{w!30W$0h+{:3Wl($eA0mJ}dM(6Qe![1Sp>/=>vTeo!]@Ia>/{5gkt>aW:MDXllx$g-0KmjLM)7ew=E(N)M+%r)eDdPvaZo&XnR.OfCVOq@+A@f6ip>}hW!SMp^G!<a5YKLO+CxG6^NaIGW7]*PU[.S*s0qQbkxq7?P6eKfcKl>PaqpKGRBRKB^0x^V3E%Q8+MfP6cDkL$d/pLb(/MBlUIS4%S:O-wKU1xZFI]l*PfP/g+HhXid#c]pMZ^4QG[?$?&s%5Wz8^hlJaUDZ*6p+6WaqtF0>3rYlWj00^jh3p7:tUpLJ?i2o!4c/]kQnzRVBReL/o(-gQWzH4{=!w7D9mlJ?fkpCysk^oFZNWYoM2^!a}=WCCtTh0j5aY&0Y+FSL2XIqN3$opG$&N>R(P$d^^NP^Lz7w4n:z.&-Xj.tlH?2zq+Apsd-J%-pD5zrZY6+p/n}ILVgIe-e%9H87^]9*qlGANQh+4LIe=IYB)3?0uD*b&46h>HNcF$b6w&CVtv0-}B-Ph(13UGQvPk9R^!S?9N^BAUo^HHD(!vJD<2ANUDwuGx.7Bt00xnF1shH.21Bnq(+Tx@1m-$t6OYAK=*unGx}=y2P?Naw3o*Om}k?[c=6EE6)]hw(M2}Dt:GDicBK?)E^S*7fl%kLdXdp7uo*4W^-FXv2ba5UjDen=*mS(%.kV)075r-xvQ$H#19aB1qF!Qq^y00:GcZdLueKD-@mbhlIv7^o-=0u-[DSI2-p0y6Nfkp/SL%=1z1Ue]j2<8EDm2+/hvXB^(HCmp0}*>As4[)k-4eN<d?VuB!Ih.8}BZEcr7yx%Civ+(%FJUqL)T$r0D#$%W0uEk{4Q}9!-p(34Wq-P3guK/?eQ*^%H2U&xIPu61Img:iCSrlLuG8tw}FgTD.bq&Rl$<Y/dn)ToLFC==YNQ9jIFM{X&:j]9zxoQe69fuh7gFglXALk)7CU*p)I-Trl@s1lMC%qiGC1HzN9^vud(:+i6&x%>pXTmN5iEgO^MOMFKLsBv0QwK11G&b3Y@j8P6<rWo^GmQnlntP4/o+dc&3gi9Us}vyrCs2i%[IUDlYSM}<$Dd0@xL$hSbDa=]A5sYb9X$E54vDLl*zi#i}*&Hv]E(s1T?+m<1=IBrnUVp7k(^xZje#(+iTYicSf-)5h+{-Zp:R7M^@t)-srcM4f&(O-cGcLgv<<](R9(8=hyQ5M*8xG*{cSp6$KzuSVl^.lY$q-WxAONE<J[[LNLszQ2we(Ya1Z=l$qDsqQS8Ie)Dq9>?.egv2#{@wR>1%)J^nSbFFP}MZ%U*k.OtQP(u3pT8(pciv.H+PZxSJQ4}&uw6(9GWbO+LVjc<{U5RDUCFP^q(e^fN.+kK[f%on49B$=on>Vk9P>&@ZqDu$@K:U0c1^D0HHriw?/y>#Nw{l<i^B82r&8QbM:ddim*=^{N6.)k&YVV>)!6n:UP@rJ[vMkk+2hTEyJuby$HmYyCi/[:j3*)rTisvsofb#:!p0^<H:GZUa0vzB4oK2nEp/F]<^)S/%K7uA1[y>mnpiAi!{^L!sA>U9u0AaObKL3h3=v+R<!%JVd[-mQp0ECbBtR?Y}r3-zpW]Tc8?6.IdehY.Sbq:f+QlN@[psW=)kLXJd*Oin2IsexRokMq9L<z=RKh3M70D#VGP}FGkn3K6x8Uu]nVi{$dG*9RH[01D7}^=BS&YM)S5g3S(oczh!POwY>y!QS3h{<bf5N&PkwA0v]5l=K=wMnk<cPV1:DwM9ypW<:lQ^HWbHWKzt<nB=j[S)q!*aBbjsQjqA-][TG^NI?5kYFvnJB#vaV/@YKsC9/KT%PDk:O2Jby$iRtWT{C.jHiEvs{m*JmkO){H2BL[nq3qBxX59%uoJ#FaY:0=:-sxn>zyB5U3AzU4u/u#<y<sye9o.Y4]>cq[?GA-a(dMU1YOPtS=h[dbl5Q]9[^Zi2Z?s5BdLix&T.XycQQvm(/6V(BCp(pbw60>n=ZQaTvEWyRm]fQU[)8z(%61O3f18E?z8EMfSql6]y9]5b9uiwiH+M:h>#3n(5fg#mpNgeKc}P.*KQG8Q0{Fh7pc4iT2]YN1[3o*OfS^35zCRvVpn<7e!T+5!IL2k9RXUgA$q@[>(83Lhg8L?Crj:jG<IWVb?UBLXb/sh@Lqiwz{+yLRbMAIf0y7p^M.36XdYOsE01>yNk.S:p?-?lx8Mm/p.Z.nK5hD.2k%2xZGG0t[xStVAQcr/CnEgl4-prC:panrbs#{u4yxEmDyae:bBB$]unaxc^%>s&8Wf0QrJXltq::LYT6)w+-}5Z$k)&6vs5Pa.al$1r7VO]A^q9udlIj-Op-2gsORUYDVNmF$1hLiaUX=&23Rsmrie6uc:T2uLP%Uwmmt{kv^NoAE3}5-ooT-KNKC>dKT[=ge6i1PHP+J[X-sg:6l8Ct#y&VO)KCjzRf3+Wu?9shew8g$}g#3:noiVdxN{msKWXQ.:uY4FtkMcUJi1C#${#K3SYgjl4a*8?2u}[KWp&B=t>*]0[RH.g=>V-Swh6)4!f)mKYM&^uzdl>Op!I)zA7B^/Az[@&D01pATP(MZr2^XQe8.A<IO4FPT{2LRT@uo/E(B&VaIDP*W4$uUl=PWqFRfjgsaanSw9?RgAivJ9[2}ehGA%2R)0!J:Zqyvtbv806WP=h[v)S$q>l-$45i@}Jc/KDxI2EZFBfyg&X/>%%!ATP!?-#8vfFS7cqA/:a<(VX:[rjNtyc2w#rxk7NE&hBXF!$mlLEhAJw0m$T7nJkW6Q$MxjZZea:6NjSg.YTZB?kWsz[7U@(k(WK!dU+qhw/#G1EAU]/)UmPj]C>E*:4mx=mGD+.pAvU^lCofKF@=M1n}4e6(f>]?px!AX0]Ii6q(GEl6N0YnXX)fEHUi?4l)$A1SbbD^HW0N5Harv[X+B=Dqu*viTP{N$y[lJMLlDIZ?%>6#/d{EJJ@^>#n+r7I[zJaijCMiu-Nf[ieb*bkS-IQ%F{PhK+CCtReEspbeg>aw[I0OSKD6X0RJ#nPrGR[R0?tb7mV+0WjNNJG377h/J(2jcWqdryDSEi]mYL<A&}mwXZqF43=&$ig2pIz{<*Mzdh/wr6.rg1qFOR!JQvw65y(tW*s.Ff$O:t$i(RC$ADGyXLaE6?8H**CJ5HI1F18KOF+(us:/O%(A/$eIHFIw=sl:q6jmb*fe+Wg&MxVp^:(uFu%c(c=1OurokK0TA3UcYaKwHWoI:HJoMr09Sfr}brMNVo$+g.W?G5--Vdgnk%TcGZvQc#v=v&C<8yu=gAtTu?WKKkI7:h{<)iyw]Zgm6s?T)!p$gSA!B3*7U8qbrBoI^1Mjn1UCqTC*ko}<)i(x=H7tS!pH/t:bF5NB4>Pw1X61DX/R8TCU*iRe.kYY75F&fOy]J30e1A-b%8QcOCD9$R.$P$4o(:#d$wCAP";

    let v = z85::decode(&u).take(n).collect::<Vec<_>>();
    let t = lzw::decode(&v);

    // let dec = std::fs::read("./dec.txt").unwrap();
    // debug_assert_eq!(dec.trim_ascii(), &t);

    let mut dec = t.iter().copied().peekable();
    let mut words = vec![];
    let mut stack = vec![];
    while dec.peek().is_some() {
        let mut acc = 0;
        loop {
            let c = *dec.peek().unwrap();
            if c.is_ascii_digit() {
                dec.next();
                acc = acc * 3 + (c - b'0') as usize;
            } else {
                break;
            }
        }

        while acc > 0 {
            acc -= 1;
            stack.pop();
        }

        while matches!(dec.peek(), Some(c) if c.is_ascii_alphabetic()) {
            stack.push(dec.next().unwrap());
        }

        words.push(stack.clone());
    }
    words
}

fn main() {
    let mut input = simple_io::stdin_at_once();
    let mut output = simple_io::stdout();

    let grid: Vec<u8> = (0..5 * 5).map(|_| input.token().as_bytes()[0]).collect();

    fn match_dfs(grid: &[u8], visited: &mut [bool], word: &[u8], pos: usize) -> bool {
        let Some((&c, rest)) = word.split_first() else {
            return true;
        };
        if visited[pos] || c != grid[pos] {
            return false;
        }

        visited[pos] = true;
        let (i, j) = (pos / 5, pos % 5);
        for di in -1..=1 {
            for dj in -1..=1 {
                if di == 0 && dj == 0 {
                    continue;
                }
                let (ni, nj) = (i as isize + di, j as isize + dj);
                if ni >= 0 && ni < 5 && nj >= 0 && nj < 5 {
                    let npos = (ni * 5 + nj) as usize;
                    if match_dfs(grid, visited, rest, npos) {
                        visited[pos] = false;
                        return true;
                    }
                }
            }
        }
        visited[pos] = false;
        false
    }

    let mut visited = [false; 5 * 5];
    let ans = get_dict()
        .into_iter()
        .filter(|word| (0..25).any(|start| match_dfs(&grid, &mut visited, word, start)))
        .count();
    writeln!(output, "{}", ans).unwrap();
}
